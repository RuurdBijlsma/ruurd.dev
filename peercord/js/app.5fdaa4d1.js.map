{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/App.vue?929b","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/views/Home.vue?40f3","webpack:///./src/components/ServerBrowser.vue?9d54","webpack:///./src/js/SimplePeerMesh.js","webpack:///./src/js/ServerInfo.js","webpack:///src/components/ServerBrowser.vue","webpack:///./src/components/ServerBrowser.vue?6141","webpack:///./src/components/ServerBrowser.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/views/Home.vue?6d7f","webpack:///./src/components/ServerBrowser.vue?c81f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_7ae3a2da_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","register","concat","process","ready","console","log","registered","cached","updatefound","updated","offline","error","Homevue_type_template_id_2de6a8a3_scoped_true_render","staticClass","_l","state","listKey","volume","muted","mute","autoplay","domProps","srcObject","stream","md-mode","md-scrollbar","on","click","$event","menuVisible","_v","md-active","update:mdActive","update:md-active","server","$route","query","room","connect","connected","disconnect","disconnected","ref","elementId","options","contextOptions","option-clicked","optionClicked","peerMesh","contextmenu","preventDefault","stopPropagation","handleClick","_s","user","_e","md-icon","md-label","md-description","promptActive","syncedState","md-title","md-input-placeholder","md-confirm-text","model","callback","$$v","$set","expression","messages","message","me","from","style","syncedIdStates","text","keypress","type","indexOf","_k","keyCode","sendMessage","Homevue_type_template_id_2de6a8a3_scoped_true_staticRenderFns","ServerBrowservue_type_template_id_41ac25ec_scoped_true_render","serverIp","addServer","ip","md-expand","online","md-expanded","title","class","connectedServer","removeServer","slot","required","roomName","connectServer","userCount","disconnectServer","ServerBrowservue_type_template_id_41ac25ec_scoped_true_staticRenderFns","SimplePeerMesh","appName","_this","trickle","arguments","undefined","wrtc","classCallCheck","possibleConstructorReturn","getPrototypeOf","socket","url","peers","printDebug","roomCount","socketId","broadcastedStream","fetch","response","json","_this2","filter","_this3","hidden","Promise","resolve","roomCountEventCallback","emit","off","once","_this4","webSocketOnly","reject","transports","socketIo","checkFullConnect","e","mySocketId","createPeer","destroy","getConnectedPeerCount","_ref","_ref2","slicedToArray","signal","peer","send","JSON","stringify","addStream","removeStream","initiator","_this5","Peer","err","warn","peerCount","track","count","close","_console","EventEmitter","ServerInfo","rooms","loading","ServerBrowservue_type_script_lang_js_","components","props","ServerInfo_ServerInfo","serverUserCountUpdater","servers","meshNetwork","SimplePeerMesh_SimplePeerMesh","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","localStorage","getItem","parse","forEach","info","updateServerInfo","find","setInterval","_callee","_context","stop","methods","_connectServer","_callee3","_context3","join","params","$emit","_x","_x2","_updateServerInfo","_callee4","refObj","_args4","_context4","getServerRooms","sent","abrupt","_x3","_disconnectServer","_callee5","_context5","_x4","findIndex","map","_addServer","_callee6","serverInfo","_context6","_x5","beforeDestroy","clearInterval","components_ServerBrowservue_type_script_lang_js_","ServerBrowser_component","ServerBrowser","Homevue_type_script_lang_js_","colorHash","color_hash_default","a","innerWidth","showServerBrowser","privateIdStates","random_username_generator_default","generate","userName","addEventListener","getVoice","voices","speechSynthesis","getVoices","Math","floor","random","speak","utter","SpeechSynthesisUtterance","voice","event","item","$refs","vueSimpleContextMenu","showMenu","alert","showMessage","broadcast","sender","msgObject","color","hex","show","lastChat","setTimeout","items","document","querySelectorAll","scrollIntoView","getMicrophone","_getMicrophone","navigator","mediaDevices","getUserMedia","audio","video","_connected","$router","replace","forceListUpdate","dataObj","toString","t0","t1","broadcastStream","watch","handler","deep","cancelAnimationFrame","interval","views_Homevue_type_script_lang_js_","Home_component","Home","Vue","use","Router","router","routes","path","config","productionTip","VueSimpleContextMenu","VueMaterial","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_2de6a8a3_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_2de6a8a3_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_41ac25ec_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_41ac25ec_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.5fdaa4d1.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/peercord/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7ae3a2da&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready () {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered () {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached () {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound () {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated () {\r\n      console.log('New content is available; please refresh.')\r\n    },\r\n    offline () {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error (error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_vm._l((_vm.privateIdStates),function(state){return _c('audio',{key:_vm.listKey,attrs:{\"volume\":state.volume,\"muted\":state.mute,\"autoplay\":\"\"},domProps:{\"srcObject\":state.stream}})}),_c('md-app',{attrs:{\"md-mode\":\"fixed\",\"md-scrollbar\":false}},[_c('md-app-toolbar',{staticClass:\"md-primary\"},[_c('md-button',{staticClass:\"md-icon-button\",on:{\"click\":function($event){_vm.menuVisible = !_vm.menuVisible}}},[_c('md-icon',[_vm._v(\"menu\")])],1),_c('span',{staticClass:\"md-title\"},[_vm._v(\"Peercord\")])],1),_c('md-app-drawer',{attrs:{\"md-active\":_vm.menuVisible},on:{\"update:mdActive\":function($event){_vm.menuVisible=$event},\"update:md-active\":function($event){_vm.menuVisible=$event}}},[_c('server-browser',{attrs:{\"server\":_vm.$route.query.server,\"room\":_vm.$route.query.room},on:{\"connect\":_vm.connected,\"disconnect\":_vm.disconnected}})],1),_c('md-app-content',{staticClass:\"main-content\"},[_c('vue-simple-context-menu',{ref:'vueSimpleContextMenu',attrs:{\"elementId\":'myUniqueId',\"options\":_vm.contextOptions},on:{\"option-clicked\":_vm.optionClicked}}),(_vm.peerMesh !== null)?_c('md-list',{key:_vm.listKey,staticClass:\"md-accent\"},[_c('md-subheader',[_vm._v(\"Online users\")]),_vm._l((_vm.syncedIdStates),function(state){return _c('md-list-item',{on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.handleClick($event, state)}}},[_c('md-icon',[_vm._v(\"account_circle\")]),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(_vm._s(state.user))])],1)})],2):_vm._e(),(this.peerMesh === null)?_c('md-empty-state',{attrs:{\"md-icon\":\"devices_other\",\"md-label\":\"Connect to a server to begin\",\"md-description\":\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\"}}):_c('md-content',{staticClass:\"chat-box\"},[_c('h3',{on:{\"click\":function($event){_vm.promptActive=!_vm.promptActive}}},[_vm._v(\"Your name: \"+_vm._s(_vm.syncedState.user))]),_c('md-dialog-prompt',{attrs:{\"md-active\":_vm.promptActive,\"md-title\":\"What's your name?\",\"md-input-placeholder\":\"Type your new username...\",\"md-confirm-text\":\"Done\"},on:{\"update:mdActive\":function($event){_vm.promptActive=$event},\"update:md-active\":function($event){_vm.promptActive=$event}},model:{value:(_vm.syncedState.user),callback:function ($$v) {_vm.$set(_vm.syncedState, \"user\", $$v)},expression:\"syncedState.user\"}}),(_vm.messages.length > 0)?_c('md-list',{key:_vm.listKey,ref:\"messagesList\",staticClass:\"messages-list\"},_vm._l((_vm.messages),function(message){return _c('md-list-item',{staticClass:\"message-item\"},[_c('div',{staticClass:\"md-list-item-text message\",attrs:{\"me\":message.from === 'me'}},[(message.show)?_c('span',{style:((\"color: \" + (message.color)))},[_vm._v(_vm._s(_vm.syncedIdStates[message.from].user))]):_vm._e(),_c('span',[_vm._v(_vm._s(message.text))])])])}),1):_vm._e(),_c('md-field',[_c('label',[_vm._v(\"Type a message\")]),_c('md-input',{on:{\"keypress\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.sendMessage(_vm.message);_vm.message=''}},model:{value:(_vm.message),callback:function ($$v) {_vm.message=$$v},expression:\"message\"}})],1)],1)],1)],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"server-browser\"},[_c('md-list',{staticClass:\"server-list\"},[_c('md-list-item',[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Add new server\")]),_c('md-input',{model:{value:(_vm.serverIp),callback:function ($$v) {_vm.serverIp=$$v},expression:\"serverIp\"}})],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"type\":\"submit\"},on:{\"click\":function($event){_vm.addServer(_vm.serverIp); _vm.serverIp=''}}},[_c('md-icon',[_vm._v(\"add\")])],1)],1),_vm._l((_vm.servers),function(server){return _c('md-list-item',{key:server.ip,attrs:{\"md-expand\":server.online,\"md-expanded\":server.online}},[(server.loading)?_c('md-icon',{staticClass:\"rotate\",attrs:{\"title\":(\"Checking connection to \" + (server.ip))}},[_vm._v(\"\\n                cached\\n            \")]):(server.online)?_c('md-icon',{class:server.ip === _vm.connectedServer.ip?'md-primary' : '',attrs:{\"title\":((server.ip) + \" is online\")}},[_vm._v(\"rss_feed\\n            \")]):_c('md-icon',{attrs:{\"title\":((server.ip) + \" is offline\")}},[_vm._v(\"error_outline\")]),_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":server.ip}},[_vm._v(\"\\n                \"+_vm._s(server.ip)+\"\\n            \")]),(server.ip!==_vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Remove \" + (server.ip) + \" from list\")},on:{\"click\":function($event){return _vm.removeServer(server.ip)}}},[_c('md-icon',[_vm._v(\"delete\")])],1):_vm._e(),_c('md-list',{attrs:{\"slot\":\"md-expand\"},slot:\"md-expand\"},[_c('md-list-item',{staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Create room\")]),_c('md-input',{attrs:{\"required\":\"\"},model:{value:(_vm.roomName),callback:function ($$v) {_vm.roomName=$$v},expression:\"roomName\"}}),_c('span',{staticClass:\"md-error\"},[_vm._v(\"Room cannot be empty\")])],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + _vm.roomName)},on:{\"click\":function($event){return _vm.connectServer(server, _vm.roomName)}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1),_vm._l((server.rooms),function(room){return _c('md-list-item',{key:room.id,staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":((server.ip) + \"#\" + (room.id))}},[_c('span',[_vm._v(_vm._s(room.id))]),(server.online)?_c('span',[_vm._v(\"Users online: \"+_vm._s(room.userCount))]):_vm._e()]),(room.id === server.room && server.ip === _vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Disconnect from \" + (server.ip) + \"#\" + (room.id))},on:{\"click\":function($event){return _vm.disconnectServer(server.ip)}}},[_c('md-icon',[_vm._v(\"stop\")])],1):_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + (room.id))},on:{\"click\":function($event){return _vm.connectServer(server, room.id)}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1)})],2)],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Peer from 'simple-peer'\r\nimport socketIo from 'socket.io-client'\r\nimport EventEmitter from 'events';\r\n\r\nexport default class SimplePeerMesh extends EventEmitter {\r\n    constructor(appName, trickle = true, wrtc = false) {\r\n        super();\r\n        this.wrtc = wrtc;\r\n        this.appName = appName;\r\n        this.trickle = trickle;\r\n        this.socket = null;\r\n        this.url = '';\r\n        this.peers = {};\r\n        this.printDebug = false;\r\n        this.roomCount = -1;\r\n        this.room = '';\r\n        this.socketId = '';\r\n        this.broadcastedStream = null;\r\n    }\r\n\r\n    async getServerRooms(url) {\r\n        if (url[url.length - 1] !== '/')\r\n            url += '/';\r\n\r\n        try {\r\n            let response = await fetch(url + 'rooms');\r\n            return (await response.json()).filter(room => room.appName === this.appName)\r\n        } catch (e) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    join(room, hidden = false) {\r\n        this.room = room;\r\n        // Waiting for this promise is dangerous, room count might be incorrect on the server due to bad disconnect\r\n        return new Promise(resolve => {\r\n            this.socket.emit('join', room, this.appName, hidden);\r\n            let roomCountEventCallback;\r\n            roomCountEventCallback = () => {\r\n                this.off('roomCount', roomCountEventCallback);\r\n\r\n                if (this.roomCount === 1)  // Alone in the room\r\n                    resolve();\r\n                else // Wait until all peer connections are complete\r\n                    this.once('fullConnect', () => resolve());\r\n            };\r\n            this.on('roomCount', roomCountEventCallback)\r\n        })\r\n    }\r\n\r\n    // On node/electron webSocketOnly might be necessary\r\n    connect(url, webSocketOnly = false) {\r\n        return new Promise((resolve, reject) => {\r\n            this.url = url;\r\n            let transports = ['websocket'];\r\n            if (!webSocketOnly) {\r\n                transports.push('polling')\r\n            }\r\n\r\n            this.socket = socketIo(url, {transports});\r\n\r\n            this.socket.on('roomCount', roomCount => {\r\n                this.roomCount = roomCount;\r\n                this.log('New room count: ' + roomCount + ' users');\r\n                this.emit('roomCount', roomCount);\r\n                this.checkFullConnect()\r\n            });\r\n\r\n            this.socket.on('connect', () => {\r\n                resolve(this.socket);\r\n                this.log('Connected to socket server')\r\n            });\r\n\r\n            this.socket.on('connect_error', e => {\r\n                this.log('Error connecting to socket server', e);\r\n                reject(e)\r\n            });\r\n\r\n            this.socket.on('socketId', mySocketId => {\r\n                this.log(`My socket id = ${mySocketId}`);\r\n                this.emit('socketId', mySocketId);\r\n                this.socketId = mySocketId;\r\n            });\r\n\r\n            this.socket.on('initialize', socketId => {\r\n                this.log('Initializing with ', socketId);\r\n                this.peers[socketId] = this.createPeer(socketId, true)\r\n            });\r\n\r\n            this.socket.on('destroy', socketId => {\r\n                if (this.peers.hasOwnProperty(socketId)) {\r\n                    try {\r\n                        this.peers[socketId].destroy();\r\n                    } catch (e) {\r\n                        //ignored, peer might already be destroyed error\r\n                    }\r\n                    delete this.peers[socketId];\r\n                    this.emit('disconnect', socketId);\r\n                    this.log('Destroying peer', socketId, 'peer count:', this.getConnectedPeerCount())\r\n                } else {\r\n                    this.log('Unable to destroy peer, it does not exist')\r\n                }\r\n            });\r\n            this.socket.on('signal', ([socketId, signal]) => {\r\n                this.log('Receiving signal from ', socketId);\r\n\r\n                if (!this.peers.hasOwnProperty(socketId)) {\r\n                    this.log(`${socketId} is initializing with me`);\r\n                    this.peers[socketId] = this.createPeer(socketId, false)\r\n                }\r\n\r\n                this.log(`Signalling ${socketId}`, signal);\r\n                this.peers[socketId].signal(signal)\r\n            })\r\n        })\r\n    }\r\n\r\n    broadcast(message) {\r\n        this.log(`Broadcasting to ${this.getConnectedPeerCount()} peers: ${message}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null) {\r\n                console.log('broadcasting ', message);\r\n                if (typeof message === 'string')\r\n                    this.peers[peer].send(message);\r\n                else\r\n                    this.peers[peer].send(JSON.stringify(message));\r\n            }\r\n    }\r\n\r\n    send(id, message) {\r\n        this.log(`Sending to ${id}: ${message}`);\r\n\r\n        if (this.peers.hasOwnProperty(id) && this.peers[id] !== null) {\r\n            console.log('broadcasting ', message);\r\n            if (typeof message === 'string')\r\n                this.peers[id].send(message);\r\n            else\r\n                this.peers[id].send(JSON.stringify(message));\r\n        }\r\n    }\r\n\r\n    broadcastStream(stream) {\r\n        this.broadcastedStream = stream;\r\n        this.log(`Broadcasting stream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer] !== null) {\r\n                    this.peers[peer].addStream(stream)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    sendStream(id, stream) {\r\n        this.log(`Sending stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].addStream(stream);\r\n    }\r\n\r\n    removeStream(id, stream) {\r\n        this.log(`Removing stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].removeStream(stream);\r\n    }\r\n\r\n    broadcastRemoveStream(stream) {\r\n        this.broadcastedStream = null;\r\n        this.log(`broadcastRemoveStream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null)\r\n                this.peers[peer].removeStream(stream);\r\n    }\r\n\r\n    createPeer(socketId, initiator) {\r\n        let options = {initiator, trickle: this.trickle};\r\n        if (this.wrtc) {\r\n            options.wrtc = this.wrtc;\r\n            this.log('Using wrtc', options)\r\n        }\r\n        if (this.broadcastedStream !== null) {\r\n            options.stream = this.broadcastedStream;\r\n            // console.log(\"Appending my stream to the new peer!\");\r\n        }\r\n        let peer = new Peer(options);\r\n        peer.on('error', err => {\r\n            console.warn(err);\r\n            this.emit('error', peer, socketId, {peer, error: err, initiator});\r\n            this.log('error', err)\r\n        });\r\n\r\n        peer.on('signal', data => {\r\n            this.log(`Emitting signal to socket: ${socketId}`);\r\n            // if (data.renegotiate) {\r\n            //     this.peers[socketId].destroy();\r\n            //     delete this.peers[socketId]\r\n            // }\r\n            this.socket.emit('message', [socketId, 'signal', data])\r\n        });\r\n\r\n        peer.on('connect', () => {\r\n            let peerCount = this.getConnectedPeerCount();\r\n            this.log('New peer connection, peer count: ', peerCount);\r\n            // console.log(peer, 'connect');\r\n            this.emit('connect', socketId);\r\n            this.checkFullConnect();\r\n        });\r\n\r\n        peer.on('data', data => {\r\n            this.emit('data', socketId, data);\r\n            this.log('data: ' + data)\r\n        });\r\n\r\n        peer.on('stream', stream => {\r\n            console.log(\"Stream received!\");\r\n            this.emit('stream', socketId, stream);\r\n            this.log('stream: ', stream)\r\n        });\r\n\r\n        peer.on('track', (track, stream) => {\r\n            this.emit('track', track, socketId, stream);\r\n            this.log('track: ', track, 'stream', stream)\r\n        });\r\n\r\n        peer.on('close', () => this.log('Peer connection closed', peer));\r\n\r\n        return peer\r\n    }\r\n\r\n    getConnectedPeerCount() {\r\n        let count = 0;\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer].connected) count++\r\n            }\r\n        }\r\n        return count\r\n    }\r\n\r\n    checkFullConnect() {\r\n        let peerCount = this.getConnectedPeerCount();\r\n        if (peerCount + 1 >= this.roomCount) {\r\n            this.log('Fully connected to room, peer count: ', peerCount, 'room count: ', this.roomCount);\r\n            this.emit('fullConnect')\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this.socket)\r\n            this.socket.close();\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                try {\r\n                    this.peers[peer].destroy();\r\n                } catch (e) {\r\n                    //ignored, peer might already be destroyed error\r\n                }\r\n                delete this.peers[peer];\r\n            }\r\n    }\r\n\r\n    log(...msg) {\r\n        if (this.printDebug) {\r\n            console.log(...msg)\r\n        }\r\n    }\r\n}","export default class ServerInfo {\r\n    constructor(ip, online = false, rooms = [], loading = true, room='') {\r\n        this.ip = ip;\r\n        this.online = online;\r\n        this.rooms = rooms;\r\n        this.loading = loading;\r\n        this.room = room;\r\n    }\r\n}\r\n","<template>\r\n    <div class=\"server-browser\">\r\n        <md-list class=\"server-list\">\r\n\r\n            <md-list-item>\r\n                <div class=\"md-list-item-text\">\r\n                    <md-field>\r\n                        <label>Add new server</label>\r\n                        <md-input v-model=\"serverIp\"></md-input>\r\n                    </md-field>\r\n                </div>\r\n\r\n                <md-button type=\"submit\" class=\"md-icon-button md-list-action\"\r\n                           @click=\"addServer(serverIp); serverIp=''\">\r\n                    <md-icon>add</md-icon>\r\n                </md-button>\r\n            </md-list-item>\r\n\r\n            <md-list-item v-for=\"server in servers\" :key=\"server.ip\" :md-expand=\"server.online\"\r\n                          :md-expanded=\"server.online\">\r\n                <md-icon :title=\"`Checking connection to ${server.ip}`\" v-if=\"server.loading\" class=\"rotate\">\r\n                    cached\r\n                </md-icon>\r\n                <md-icon :title=\"`${server.ip} is online`\" v-else-if=\"server.online\"\r\n                         :class=\"server.ip === connectedServer.ip?'md-primary' : ''\">rss_feed\r\n                </md-icon>\r\n                <md-icon :title=\"`${server.ip} is offline`\" v-else>error_outline</md-icon>\r\n\r\n                <div class=\"md-list-item-text\" :title=\"server.ip\">\r\n                    {{server.ip}}\r\n                </div>\r\n                <md-button class=\"md-icon-button md-list-action\"\r\n                           :title=\"`Remove ${server.ip} from list`\"\r\n                           v-if=\"server.ip!==connectedServer.ip\"\r\n                           @click=\"removeServer(server.ip)\">\r\n                    <md-icon>delete</md-icon>\r\n                </md-button>\r\n\r\n                <md-list slot=\"md-expand\">\r\n                    <md-list-item class=\"md-inset\">\r\n                        <div class=\"md-list-item-text\">\r\n                            <md-field>\r\n                                <label>Create room</label>\r\n                                <md-input v-model=\"roomName\" required></md-input>\r\n                                <span class=\"md-error\">Room cannot be empty</span>\r\n                            </md-field>\r\n                        </div>\r\n\r\n                        <md-button\r\n                                :title=\"`Connect to ${server.ip}#${roomName}`\"\r\n                                class=\"md-icon-button md-list-action md-primary\"\r\n                                @click=\"connectServer(server, roomName)\">\r\n                            <md-icon>keyboard_arrow_right</md-icon>\r\n                        </md-button>\r\n                    </md-list-item>\r\n\r\n                    <md-list-item class=\"md-inset\" v-for=\"room in server.rooms\" :key=\"room.id\">\r\n                        <div class=\"md-list-item-text\" :title=\"`${server.ip}#${room.id}`\">\r\n                            <span>{{room.id}}</span>\r\n                            <span v-if=\"server.online\">Users online: {{room.userCount}}</span>\r\n                        </div>\r\n                        <md-button class=\"md-icon-button md-list-action\"\r\n                                   :title=\"`Disconnect from ${server.ip}#${room.id}`\"\r\n                                   v-if=\"room.id === server.room && server.ip === connectedServer.ip\"\r\n                                   @click=\"disconnectServer(server.ip)\">\r\n                            <md-icon>stop</md-icon>\r\n                        </md-button>\r\n                        <md-button class=\"md-icon-button md-list-action md-primary\"\r\n                                   :title=\"`Connect to ${server.ip}#${room.id}`\"\r\n                                   v-else\r\n                                   @click=\"connectServer(server, room.id)\">\r\n                            <md-icon>keyboard_arrow_right</md-icon>\r\n                        </md-button>\r\n                    </md-list-item>\r\n                </md-list>\r\n\r\n            </md-list-item>\r\n        </md-list>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import SimplePeerMesh from '../js/SimplePeerMesh';\r\n    import ServerInfo from '../js/ServerInfo';\r\n\r\n    export default {\r\n        name: 'server-browser',\r\n        components: {},\r\n        props: ['room', 'server'],\r\n        data() {\r\n            return {\r\n                serverIp: 'https://api.ruurd.dev:3000',\r\n                roomName: '',\r\n                connectedServer: new ServerInfo('-1'),\r\n                serverUserCountUpdater: false,\r\n                servers: [],\r\n                meshNetwork: new SimplePeerMesh('peercord'),\r\n            }\r\n        },\r\n        async mounted() {\r\n            if (localStorage.getItem('servers') !== null)\r\n                JSON.parse(localStorage.servers).forEach(ip => {\r\n                    let info = new ServerInfo(ip);\r\n                    this.servers.push(info);\r\n                    this.updateServerInfo(ip, info)\r\n                });\r\n\r\n            if (this.servers.find(s => s.ip === this.serverIp))\r\n                this.serverIp = '';\r\n\r\n            this.serverUserCountUpdater = setInterval(async () => {\r\n                this.servers.forEach(s => this.updateServerInfo(s.ip, s));\r\n            }, 2000);\r\n\r\n            if (this.server) {\r\n                if (!this.servers.find(s => s.ip === this.server))\r\n                    await this.addServer(this.server);\r\n                // this.servers.push(await this.updateServerInfo(this.server));\r\n\r\n                if (this.room) {\r\n                    this.connectServer(this.servers.find(s => s.ip === this.server), this.room);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async connectServer(server, room) {\r\n                this.roomName = '';\r\n                if (this.meshNetwork) {\r\n                    this.disconnectServer(this.meshNetwork.url);\r\n                }\r\n\r\n                this.meshNetwork.printDebug = false;\r\n\r\n                await this.meshNetwork.connect(server.ip, true);\r\n                this.updateServerInfo(server.ip, server);\r\n                await this.meshNetwork.join(room);\r\n\r\n                server.room = room;\r\n                this.connectedServer = server;\r\n\r\n                this.$route.params.server = server.ip;\r\n                this.$route.params.room = room;\r\n\r\n                this.$emit('connect', this.meshNetwork);\r\n            },\r\n            async updateServerInfo(ip, refObj = false) {\r\n                let rooms = await this.meshNetwork.getServerRooms(ip);\r\n                let online = rooms !== null;\r\n\r\n                rooms = rooms || [];\r\n                if (refObj !== false) {\r\n                    refObj.online = online;\r\n                    refObj.rooms = rooms;\r\n                    refObj.loading = false\r\n                }\r\n                return new ServerInfo(ip, online, rooms, false);\r\n            },\r\n            async disconnectServer(ip) {\r\n                if (ip === this.meshNetwork.url) {\r\n                    this.meshNetwork.destroy();\r\n                    this.$emit('disconnect', this.meshNetwork);\r\n                    // this.meshNetwork = null;\r\n                    this.updateServerInfo(this.connectedServer.ip, this.connectedServer);\r\n                    this.connectedServer = new ServerInfo('-1');\r\n                } else {\r\n                    console.warn(\"cannot disconnect from this server, you're not connected to it\");\r\n                }\r\n            },\r\n            removeServer(ip) {\r\n                if (this.servers.find(s => s.ip === ip)) {\r\n                    this.servers.splice(this.servers.findIndex(s => s.ip === ip), 1);\r\n                    localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                }\r\n            },\r\n            async addServer(ip) {\r\n                if (this.servers.find(s => s.ip === ip))\r\n                    return;\r\n                let serverInfo = new ServerInfo(ip);\r\n                this.servers.push(serverInfo);\r\n                localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                await this.updateServerInfo(ip, serverInfo);\r\n\r\n            },\r\n        },\r\n        beforeDestroy() {\r\n            clearInterval(this.serverUserCountUpdater);\r\n            if (this.meshNetwork)\r\n                this.meshNetwork.destroy();\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .server-browser {\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list {\r\n        padding: 15px;\r\n        height: 100%;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    .rotate {\r\n        animation: spin 1s infinite linear reverse;\r\n    }\r\n\r\n    .md-card-media.md-ratio-16-9 img {\r\n        filter: blur(2px) !important;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ServerBrowser.vue?vue&type=template&id=41ac25ec&scoped=true&\"\nimport script from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ServerBrowser.vue?vue&type=style&index=0&id=41ac25ec&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"41ac25ec\",\n  null\n  \n)\n\nexport default component.exports","<!--TODO: Show online members somewhere-->\r\n<!--TODO: Voice chat-->\r\n\r\n<template>\r\n    <div class=\"home\">\r\n        <audio v-for=\"state in privateIdStates\" :srcObject.prop=\"state.stream\" :key=\"listKey\" :volume=\"state.volume\"\r\n               :muted=\"state.mute\" autoplay></audio>\r\n\r\n        <md-app md-mode=\"fixed\" :md-scrollbar=\"false\">\r\n            <md-app-toolbar class=\"md-primary\">\r\n                <md-button class=\"md-icon-button\" @click=\"menuVisible = !menuVisible\">\r\n                    <md-icon>menu</md-icon>\r\n                </md-button>\r\n                <span class=\"md-title\">Peercord</span>\r\n            </md-app-toolbar>\r\n\r\n            <md-app-drawer :md-active.sync=\"menuVisible\">\r\n                <server-browser :server=\"$route.query.server\"\r\n                                :room=\"$route.query.room\"\r\n                                v-on:connect=\"connected\"\r\n                                v-on:disconnect=\"disconnected\"></server-browser>\r\n            </md-app-drawer>\r\n\r\n            <md-app-content class=\"main-content\">\r\n                <vue-simple-context-menu\r\n                        :elementId=\"'myUniqueId'\"\r\n                        :options=\"contextOptions\"\r\n                        :ref=\"'vueSimpleContextMenu'\"\r\n                        @option-clicked=\"optionClicked\">\r\n                </vue-simple-context-menu>\r\n\r\n                <md-list :key=\"listKey\" class=\"md-accent\" v-if=\"peerMesh !== null\">\r\n                    <md-subheader>Online users</md-subheader>\r\n                    <md-list-item v-for=\"state in syncedIdStates\"\r\n                                  @contextmenu.prevent.stop=\"handleClick($event, state)\">\r\n                        <md-icon>account_circle</md-icon>\r\n                        <span class=\"md-list-item-text\">{{state.user}}</span>\r\n                    </md-list-item>\r\n                </md-list>\r\n                <md-empty-state\r\n                        v-if=\"this.peerMesh === null\"\r\n                        md-icon=\"devices_other\"\r\n                        md-label=\"Connect to a server to begin\"\r\n                        md-description=\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\">\r\n                </md-empty-state>\r\n                <md-content v-else class=\"chat-box\">\r\n                    <h3 @click=\"promptActive=!promptActive\">Your name: {{syncedState.user}}</h3>\r\n                    <md-dialog-prompt\r\n                            :md-active.sync=\"promptActive\"\r\n                            v-model=\"syncedState.user\"\r\n                            md-title=\"What's your name?\"\r\n                            md-input-placeholder=\"Type your new username...\"\r\n                            md-confirm-text=\"Done\"/>\r\n                    <md-list class=\"messages-list\" v-if=\"messages.length > 0\" ref=\"messagesList\" :key=\"listKey\">\r\n                        <md-list-item v-for=\"message in messages\" class=\"message-item\">\r\n                            <div class=\"md-list-item-text message\"\r\n                                 :me=\"message.from === 'me'\">\r\n                            <span :style=\"`color: ${message.color}`\"\r\n                                  v-if=\"message.show\">{{syncedIdStates[message.from].user}}</span>\r\n                                <span>{{message.text}}</span>\r\n                            </div>\r\n                        </md-list-item>\r\n                    </md-list>\r\n                    <md-field>\r\n                        <label>Type a message</label>\r\n                        <md-input @keypress.enter=\"sendMessage(message);message=''\" v-model=\"message\"></md-input>\r\n                    </md-field>\r\n                </md-content>\r\n            </md-app-content>\r\n        </md-app>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ServerBrowser from \"@/components/ServerBrowser\";\r\n    import rug from 'random-username-generator';\r\n    import ColorHash from 'color-hash';\r\n\r\n\r\n    export default {\r\n        name: 'home',\r\n        components: {ServerBrowser},\r\n        data() {\r\n            return {\r\n                menuVisible: false,\r\n                colorHash: new ColorHash(),\r\n                innerWidth: window.innerWidth,\r\n                listKey: 0,\r\n                promptActive: false,\r\n                showServerBrowser: true,\r\n                message: '',\r\n                messages: [],\r\n                peerMesh: null,\r\n                privateIdStates: {},\r\n                syncedIdStates: {},\r\n                contextOptions: [{name: 'Mute'}, {name: 'Adjust volume'}],\r\n                syncedState: {\r\n                    user: rug.generate()\r\n                },\r\n            }\r\n        },\r\n        async mounted() {\r\n            if (localStorage.getItem('userName') !== null)\r\n                this.syncedState.user = localStorage.userName;\r\n            this.syncedIdStates['me'] = this.syncedState;\r\n            window.addEventListener('resize', () => this.innerWidth = innerWidth);\r\n\r\n        },\r\n        methods: {\r\n            getVoice() {\r\n                let voices = speechSynthesis.getVoices();\r\n                return voices[Math.floor(Math.random() * voices.length)];\r\n            },\r\n            speak(message) {\r\n                let utter = new SpeechSynthesisUtterance(message);\r\n                utter.voice = this.getVoice();\r\n                speechSynthesis.speak(utter);\r\n            },\r\n            handleClick(event, item) {\r\n                this.$refs.vueSimpleContextMenu.showMenu(event, item)\r\n            },\r\n            optionClicked(event) {\r\n                window.alert(JSON.stringify(event))\r\n            },\r\n            sendMessage(message) {\r\n                this.speak(message);\r\n                if (!this.peerMesh) return;\r\n                this.message = '';\r\n\r\n                this.showMessage('me', message);\r\n                this.peerMesh.broadcast(JSON.stringify({\r\n                    event: 'message',\r\n                    value: message\r\n                }));\r\n            },\r\n            showMessage(sender, message) {\r\n                let msgObject = {text: message, from: sender, color: this.colorHash.hex(sender), show: true};\r\n                let lastChat = this.messages[this.messages.length - 1];\r\n\r\n                if (lastChat && lastChat.from === sender)\r\n                    msgObject.show = false;\r\n\r\n                this.messages.push(msgObject);\r\n                console.log(msgObject);\r\n\r\n                setTimeout(() => {\r\n                    let items = document.querySelectorAll('.message-item');\r\n                    let lastChat = items[items.length - 1];\r\n                    if (lastChat)\r\n                        lastChat.scrollIntoView();\r\n                });\r\n            },\r\n            async getMicrophone() {\r\n                return await navigator.mediaDevices.getUserMedia({audio: true, video: false});\r\n            },\r\n            async connected(peerMesh) {\r\n\r\n                this.showServerBrowser = false;\r\n                this.peerMesh = peerMesh;\r\n\r\n                this.$router.replace({\r\n                    query: {\r\n                        room: peerMesh.room,\r\n                        server: peerMesh.url\r\n                    }\r\n                });\r\n\r\n                console.log(\"Connected\", peerMesh);\r\n                this.broadcast('initialState', this.syncedState);\r\n\r\n                peerMesh.on('connect', id => {\r\n                    console.log(\"User connected\", id);\r\n                    this.speak(`User connected`);\r\n                });\r\n\r\n                peerMesh.on('disconnect', id => {\r\n                    console.log(\"User disconnected\", id);\r\n                    this.speak(`User disconnected`);\r\n                    delete this.syncedIdStates[id];\r\n                    delete this.privateIdStates[id];\r\n                    this.forceListUpdate();\r\n                });\r\n\r\n                peerMesh.on('data', (id, data) => {\r\n                    let dataObj = JSON.parse(data.toString());\r\n                    switch (dataObj.event) {\r\n                        case 'initialState':\r\n                            console.log('initialState, replying with my syncedState', id, dataObj.value);\r\n                            this.syncedIdStates[id] = dataObj.value;\r\n                            this.forceListUpdate();\r\n                            this.send(id, 'syncedState', this.syncedState);\r\n                            break;\r\n                        case 'syncedState':\r\n                            console.log('updating syncedState', id, dataObj.value);\r\n                            this.syncedIdStates[id] = dataObj.value;\r\n                            this.forceListUpdate();\r\n                            break;\r\n                        case 'message':\r\n                            console.log('receiving message', id, dataObj.value);\r\n                            this.showMessage(id, dataObj.value);\r\n                            break;\r\n                        default:\r\n                            console.log(\"Unknown event\", dataObj);\r\n                            break;\r\n                    }\r\n                });\r\n                peerMesh.on('stream', (id, stream) => {\r\n                    if (!this.privateIdStates[id])\r\n                        this.privateIdStates[id] = {};\r\n                    let state = this.privateIdStates[id];\r\n                    state.stream = stream;\r\n                    // state.volume = 1;\r\n                    // state.mute = false;\r\n                    console.log(state);\r\n                    this.forceListUpdate();\r\n                });\r\n\r\n                peerMesh.broadcastStream(await this.getMicrophone());\r\n            },\r\n            forceListUpdate() {\r\n                this.listKey++;\r\n                setTimeout(() => {\r\n                    let items = document.querySelectorAll('.message-item');\r\n                    let lastChat = items[items.length - 1];\r\n                    if (lastChat)\r\n                        lastChat.scrollIntoView();\r\n                });\r\n            },\r\n            disconnected(peerMesh) {\r\n                this.$router.replace({});\r\n                this.peerMesh = null;\r\n                console.log(\"Disconnected\", peerMesh);\r\n                this.syncedIdStates = {me: this.syncedState};\r\n            },\r\n            send(id, event, value) {\r\n                if (this.peerMesh && this.peerMesh.peers.hasOwnProperty(id)) {\r\n                    this.peerMesh.peers[id].send(JSON.stringify({\r\n                        event: event,\r\n                        value: value\r\n                    }))\r\n                }\r\n            },\r\n            broadcast(event, value) {\r\n                if (this.peerMesh) {\r\n                    this.peerMesh.broadcast(JSON.stringify({\r\n                        event: event,\r\n                        value: value\r\n                    }))\r\n                }\r\n            },\r\n        },\r\n        watch: {\r\n            syncedState: {\r\n                handler() {\r\n                    localStorage.userName = this.syncedState.user;\r\n                    this.forceListUpdate();\r\n                    this.broadcast('syncedState', this.syncedState);\r\n                },\r\n                deep: true\r\n            }\r\n        },\r\n        beforeDestroy() {\r\n            for (let state in this.privateIdStates)\r\n                if (this.privateIdStates.hasOwnProperty(state))\r\n                    cancelAnimationFrame(this.privateIdStates[state].interval);\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .md-app {\r\n        height: 100vh;\r\n    }\r\n\r\n    .md-drawer {\r\n        max-width: calc(100% - 125px);\r\n    }\r\n\r\n    .main-content {\r\n        display: flex;\r\n        padding: 0px;\r\n    }\r\n\r\n    .chat-box {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .messages-list {\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .message[me] * {\r\n        text-align: right !important;\r\n    }\r\n\r\n    .home {\r\n        height: 100%;\r\n    }\r\n\r\n    .chat-box {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 100%;\r\n    }\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=2de6a8a3&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=2de6a8a3&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2de6a8a3\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Home from './views/Home.vue'\r\n\r\nVue.use(Router);\r\n\r\nexport default new Router({\r\n    routes: [\r\n        {\r\n            path: '/',\r\n            name: 'home',\r\n            component: Home\r\n        },\r\n    ]\r\n})\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport VueMaterial from 'vue-material'\r\nimport 'vue-material/dist/vue-material.min.css'\r\nimport 'vue-material/dist/theme/default.css'\r\nimport 'vue-simple-context-menu/dist/vue-simple-context-menu.css'\r\nimport VueSimpleContextMenu from 'vue-simple-context-menu'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.component('vue-simple-context-menu', VueSimpleContextMenu);\r\nVue.use(VueMaterial);\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=2de6a8a3&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=2de6a8a3&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=41ac25ec&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=41ac25ec&scoped=true&lang=css&\""],"sourceRoot":""}