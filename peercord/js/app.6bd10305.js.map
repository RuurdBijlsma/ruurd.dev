{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/views/Home.vue?af95","webpack:///./src/App.vue?1290","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/views/Home.vue?7e20","webpack:///./src/components/ServerBrowser.vue?6878","webpack:///./src/js/SimplePeerMesh.js","webpack:///./src/js/ServerInfo.js","webpack:///src/components/ServerBrowser.vue","webpack:///./src/components/ServerBrowser.vue?6141","webpack:///./src/components/ServerBrowser.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/components/ServerBrowser.vue?33c3"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_27f45817_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_27f45817_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_6c462336_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","register","concat","process","ready","console","log","registered","cached","updatefound","updated","offline","error","Homevue_type_template_id_27f45817_scoped_true_render","staticClass","active","showServerBrowser","innerWidth","server","$route","query","room","on","connect","connected","disconnect","disconnected","click","$event","_v","_e","peerMesh","md-icon","md-label","md-description","promptActive","_s","state","user","md-active","md-title","md-input-placeholder","md-confirm-text","update:mdActive","update:md-active","model","callback","$$v","$set","expression","messages","listKey","ref","_l","message","me","from","style","idStates","text","keypress","type","indexOf","_k","keyCode","sendMessage","Homevue_type_template_id_27f45817_scoped_true_staticRenderFns","ServerBrowservue_type_template_id_a1058e88_scoped_true_render","serverIp","addServer","ip","md-expand","online","md-expanded","title","class","connectedServer","removeServer","slot","required","roomName","connectServer","userCount","disconnectServer","ServerBrowservue_type_template_id_a1058e88_scoped_true_staticRenderFns","SimplePeerMesh","trickle","arguments","undefined","wrtc","classCallCheck","socket","url","peers","_events","printDebug","roomCount","socketId","_this","Promise","resolve","roomCountEventCallback","emit","fullConnectEventCallback","off","_this2","webSocketOnly","reject","transports","socketIo","fire","checkFullConnect","e","mySocketId","createPeer","destroy","getConnectedPeerCount","_ref","_ref2","slicedToArray","signal","peer","send","JSON","stringify","stream","addStream","removeStream","initiator","_this3","options","Peer","err","peerCount","track","count","close","event","fun","_len","parameters","Array","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","return","_console","fetch","response","json","ServerInfo","rooms","loading","ServerBrowservue_type_script_lang_js_","components","props","ServerInfo_ServerInfo","serverUserCountUpdater","servers","meshNetwork","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee2","wrap","_context2","prev","localStorage","getItem","parse","forEach","info","updateServerInfo","find","setInterval","_callee","_context","stop","methods","_connectServer","_callee3","_context3","SimplePeerMesh_SimplePeerMesh","join","params","$emit","_x","_x2","_updateServerInfo","_callee4","refObj","_args4","_context4","getServerRooms","sent","abrupt","_x3","_disconnectServer","_callee5","_context5","warn","_x4","findIndex","map","_addServer","_callee6","serverInfo","_context6","_x5","beforeDestroy","clearInterval","components_ServerBrowservue_type_script_lang_js_","ServerBrowser_component","ServerBrowser","Homevue_type_script_lang_js_","colorHash","color_hash_default","a","random_username_generator_default","generate","userName","addEventListener","showMessage","broadcast","sender","msgObject","color","hex","show","lastChat","setTimeout","items","document","querySelectorAll","scrollIntoView","$router","replace","dataObj","toString","forceListUpdate","watch","handler","deep","views_Homevue_type_script_lang_js_","Home_component","Home","Vue","use","Router","router","routes","path","config","productionTip","VueMaterial","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_a1058e88_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_a1058e88_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.6bd10305.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/peercord/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=27f45817&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=27f45817&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=6c462336&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('server-browser',{staticClass:\"browser\",attrs:{\"active\":_vm.showServerBrowser || _vm.innerWidth > 750,\"server\":_vm.$route.query.server,\"room\":_vm.$route.query.room},on:{\"connect\":_vm.connected,\"disconnect\":_vm.disconnected}}),(_vm.innerWidth <= 750)?_c('md-button',{staticClass:\"md-fab md-mini browser-fab\",attrs:{\"active\":_vm.showServerBrowser || _vm.innerWidth > 750},on:{\"click\":function($event){_vm.showServerBrowser = !_vm.showServerBrowser}}},[_c('md-icon',[_vm._v(\"menu\")])],1):_vm._e(),(_vm.showServerBrowser && _vm.innerWidth <= 750)?_c('div',{staticClass:\"overlay\",on:{\"click\":function($event){_vm.showServerBrowser=false}}}):_vm._e(),_c('md-content',{staticClass:\"main-content\"},[(this.peerMesh === null)?_c('md-empty-state',{attrs:{\"md-icon\":\"devices_other\",\"md-label\":\"Connect to a server to begin\",\"md-description\":\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\"}}):_c('md-content',{staticClass:\"chat-box\"},[_c('h3',{on:{\"click\":function($event){_vm.promptActive=!_vm.promptActive}}},[_vm._v(\"Your name: \"+_vm._s(_vm.state.user))]),_c('md-dialog-prompt',{attrs:{\"md-active\":_vm.promptActive,\"md-title\":\"What's your name?\",\"md-input-placeholder\":\"Type your new username...\",\"md-confirm-text\":\"Done\"},on:{\"update:mdActive\":function($event){_vm.promptActive=$event},\"update:md-active\":function($event){_vm.promptActive=$event}},model:{value:(_vm.state.user),callback:function ($$v) {_vm.$set(_vm.state, \"user\", $$v)},expression:\"state.user\"}}),(_vm.messages.length > 0)?_c('md-list',{key:_vm.listKey,ref:\"messagesList\",staticClass:\"messages-list\"},_vm._l((_vm.messages),function(message){return _c('md-list-item',{staticClass:\"message-item\"},[_c('div',{staticClass:\"md-list-item-text message\",attrs:{\"me\":message.from === 'me'}},[(message.show)?_c('span',{style:((\"color: \" + (message.color)))},[_vm._v(_vm._s(_vm.idStates[message.from].user))]):_vm._e(),_c('span',[_vm._v(_vm._s(message.text))])])])}),1):_vm._e(),_c('md-field',[_c('label',[_vm._v(\"Type a message\")]),_c('md-input',{on:{\"keypress\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.sendMessage(_vm.message);_vm.message=''}},model:{value:(_vm.message),callback:function ($$v) {_vm.message=$$v},expression:\"message\"}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"server-browser\"},[_c('md-list',{staticClass:\"server-list\"},[_c('md-list-item',[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Add new server\")]),_c('md-input',{model:{value:(_vm.serverIp),callback:function ($$v) {_vm.serverIp=$$v},expression:\"serverIp\"}})],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"type\":\"submit\"},on:{\"click\":function($event){_vm.addServer(_vm.serverIp); _vm.serverIp=''}}},[_c('md-icon',[_vm._v(\"add\")])],1)],1),_vm._l((_vm.servers),function(server){return _c('md-list-item',{key:server.ip,attrs:{\"md-expand\":server.online,\"md-expanded\":server.online}},[(server.loading)?_c('md-icon',{staticClass:\"rotate\",attrs:{\"title\":(\"Checking connection to \" + (server.ip))}},[_vm._v(\"\\n                    cached\\n                \")]):(server.online)?_c('md-icon',{class:server.ip === _vm.connectedServer.ip?'md-primary' : '',attrs:{\"title\":((server.ip) + \" is online\")}},[_vm._v(\"rss_feed\\n                \")]):_c('md-icon',{attrs:{\"title\":((server.ip) + \" is offline\")}},[_vm._v(\"error_outline\")]),_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":server.ip}},[_vm._v(\"\\n                    \"+_vm._s(server.ip)+\"\\n                \")]),(server.ip!==_vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Remove \" + (server.ip) + \" from list\")},on:{\"click\":function($event){return _vm.removeServer(server.ip)}}},[_c('md-icon',[_vm._v(\"delete\")])],1):_vm._e(),_c('md-list',{attrs:{\"slot\":\"md-expand\"},slot:\"md-expand\"},[_c('md-list-item',{staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Create room\")]),_c('md-input',{attrs:{\"required\":\"\"},model:{value:(_vm.roomName),callback:function ($$v) {_vm.roomName=$$v},expression:\"roomName\"}}),_c('span',{staticClass:\"md-error\"},[_vm._v(\"Room cannot be empty\")])],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + _vm.roomName)},on:{\"click\":function($event){_vm.connectServer(server, _vm.roomName); _vm.roomName=''}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1),_vm._l((server.rooms),function(room){return _c('md-list-item',{key:room.name,staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":((server.ip) + \"#\" + (room.name))}},[_c('span',[_vm._v(_vm._s(room.name))]),(server.online)?_c('span',[_vm._v(\"Users online: \"+_vm._s(room.userCount))]):_vm._e()]),(room.name === server.room && server.ip === _vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Disconnect from \" + (server.ip) + \"#\" + (room.name))},on:{\"click\":function($event){return _vm.disconnectServer(server.ip)}}},[_c('md-icon',[_vm._v(\"stop\")])],1):_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + (room.name))},on:{\"click\":function($event){return _vm.connectServer(server, room.name)}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1)})],2)],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Peer from 'simple-peer'\r\nimport socketIo from 'socket.io-client'\r\n\r\nexport default class SimplePeerMesh {\r\n    constructor(trickle = true, wrtc = false) {\r\n        this.wrtc = wrtc;\r\n        this.trickle = trickle;\r\n        this.socket = null;\r\n        this.url = '';\r\n        this.peers = {};\r\n        this._events = {};\r\n        this.printDebug = false;\r\n        this.roomCount = -1;\r\n        this.room = '';\r\n        this.socketId = '';\r\n    }\r\n\r\n    static async getServerRooms(url) {\r\n        if (url[url.length - 1] !== '/')\r\n            url += '/';\r\n\r\n        try {\r\n            let response = await fetch(url + 'rooms');\r\n            return await response.json()\r\n        } catch (e) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    join(room) {\r\n        this.room = room;\r\n        // Waiting for this promise is dangerous, room count might be incorrect on the server due to bad disconnect\r\n        return new Promise(resolve => {\r\n            this.socket.emit('join', room);\r\n            let roomCountEventCallback;\r\n            roomCountEventCallback = () => {\r\n                if (this.roomCount === 1) // Alone in the room\r\n                {\r\n                    resolve()\r\n                } else { // Wait until all peer connections are complete\r\n                    let fullConnectEventCallback;\r\n                    fullConnectEventCallback = () => {\r\n                        resolve();\r\n                        this.off('fullConnect', fullConnectEventCallback)\r\n                    };\r\n                    this.on('fullConnect', fullConnectEventCallback)\r\n                }\r\n                this.off('roomCount', roomCountEventCallback)\r\n            };\r\n            this.on('roomCount', roomCountEventCallback)\r\n        })\r\n    }\r\n\r\n    // On node/electron webSocketOnly might be necessary\r\n    connect(url, webSocketOnly = false) {\r\n        return new Promise((resolve, reject) => {\r\n            this.url = url;\r\n            let transports = ['websocket'];\r\n            if (!webSocketOnly) {\r\n                transports.push('polling')\r\n            }\r\n\r\n            this.socket = socketIo(url, {transports});\r\n\r\n            this.socket.on('roomCount', roomCount => {\r\n                this.roomCount = roomCount;\r\n                this.log('New room count: ' + roomCount + ' users');\r\n                this.fire('roomCount', roomCount);\r\n                this.checkFullConnect()\r\n            });\r\n\r\n            this.socket.on('connect', () => {\r\n                resolve(this.socket);\r\n                this.log('Connected to socket server')\r\n            });\r\n\r\n            this.socket.on('connect_error', e => {\r\n                this.log('Error connecting to socket server', e);\r\n                reject(e)\r\n            });\r\n\r\n            this.socket.on('socketId', mySocketId => {\r\n                this.log(`My socket id = ${mySocketId}`);\r\n                this.fire('socketId', mySocketId);\r\n                this.socketId = mySocketId;\r\n            });\r\n\r\n            this.socket.on('initialize', socketId => {\r\n                this.log('Initializing with ', socketId);\r\n                this.peers[socketId] = this.createPeer(socketId, true)\r\n            });\r\n\r\n            this.socket.on('destroy', socketId => {\r\n                if (this.peers.hasOwnProperty(socketId)) {\r\n                    this.peers[socketId].destroy();\r\n                    delete this.peers[socketId];\r\n                    this.fire('disconnect', socketId);\r\n                    this.log('Destroying peer', socketId, 'peer count:', this.getConnectedPeerCount())\r\n                } else {\r\n                    this.log('Unable to destroy peer, it does not exist')\r\n                }\r\n            });\r\n            this.socket.on('signal', ([socketId, signal]) => {\r\n                this.log('Receiving signal from ', socketId);\r\n\r\n                if (!this.peers.hasOwnProperty(socketId)) {\r\n                    this.log(`${socketId} is initializing with me`);\r\n                    this.peers[socketId] = this.createPeer(socketId, false)\r\n                }\r\n\r\n                this.log(`Signalling ${socketId}`, signal);\r\n                this.peers[socketId].signal(signal)\r\n            })\r\n        })\r\n    }\r\n\r\n    broadcast(message) {\r\n        this.log(`Broadcasting to ${this.getConnectedPeerCount()} peers: ${message}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null) {\r\n                console.log('broadcasting ', message);\r\n                if (typeof message === 'string')\r\n                    this.peers[peer].send(message);\r\n                else\r\n                    this.peers[peer].send(JSON.stringify(message));\r\n            }\r\n    }\r\n\r\n    send(id, message) {\r\n        this.log(`Sending to ${id}: ${message}`);\r\n\r\n        if (this.peers.hasOwnProperty(id) && this.peers[id] !== null) {\r\n            console.log('broadcasting ', message);\r\n            if (typeof message === 'string')\r\n                this.peers[id].send(message);\r\n            else\r\n                this.peers[id].send(JSON.stringify(message));\r\n        }\r\n    }\r\n\r\n    broadcastStream(stream) {\r\n        this.log(`Broadcasting stream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer] !== null) {\r\n                    this.peers[peer].addStream(stream)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    sendStream(id, stream) {\r\n        this.log(`Sending stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].addStream(stream);\r\n    }\r\n\r\n    removeStream(id, stream) {\r\n        this.log(`Removing stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].removeStream(stream);\r\n    }\r\n\r\n    broadcastRemoveStream(stream) {\r\n        this.log(`broadcastRemoveStream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null)\r\n                this.peers[peer].removeStream(stream);\r\n    }\r\n\r\n    createPeer(socketId, initiator) {\r\n        let options = {initiator, trickle: this.trickle};\r\n        if (this.wrtc) {\r\n            options.wrtc = this.wrtc;\r\n            this.log('Using wrtc', options)\r\n        }\r\n        let peer = new Peer(options);\r\n        peer.on('error', err => {\r\n            this.fire('error', peer, socketId, {peer, error: err, initiator});\r\n            this.log('error', err)\r\n        });\r\n\r\n        peer.on('signal', data => {\r\n            this.log(`Emitting signal to socket: ${socketId}`);\r\n            // if (data.renegotiate) {\r\n            //     this.peers[socketId].destroy();\r\n            //     delete this.peers[socketId]\r\n            // }\r\n            this.socket.emit('message', [socketId, 'signal', data])\r\n        });\r\n\r\n        peer.on('connect', () => {\r\n            let peerCount = this.getConnectedPeerCount();\r\n            this.log('New peer connection, peer count: ', peerCount);\r\n            this.fire('connect', socketId);\r\n            this.checkFullConnect();\r\n        });\r\n\r\n        peer.on('data', data => {\r\n            this.fire('data', socketId, data);\r\n            this.log('data: ' + data)\r\n        });\r\n\r\n        peer.on('stream', stream => {\r\n            this.fire('stream', socketId, stream);\r\n            this.log('stream: ', stream)\r\n        });\r\n\r\n        peer.on('track', (track, stream) => {\r\n            this.fire('track', track, socketId, stream);\r\n            this.log('track: ', track, 'stream', stream)\r\n        });\r\n\r\n        peer.on('close', () => this.log('Peer connection closed', peer));\r\n\r\n        return peer\r\n    }\r\n\r\n    getConnectedPeerCount() {\r\n        let count = 0;\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer].connected) count++\r\n            }\r\n        }\r\n        return count\r\n    }\r\n\r\n    checkFullConnect() {\r\n        let peerCount = this.getConnectedPeerCount();\r\n        if (peerCount + 1 >= this.roomCount) {\r\n            this.log('Fully connected to room, peer count: ', peerCount, 'room count: ', this.roomCount);\r\n            this.fire('fullConnect')\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.socket.close();\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer))\r\n                this.peers[peer].destroy()\r\n    }\r\n\r\n    off(event, fun) {\r\n        if (this._events.hasOwnProperty(event)) {\r\n            this._events[event].splice(this._events[event].indexOf(fun), 1)\r\n        }\r\n    }\r\n\r\n    on(event, fun) {\r\n        if (!this._events.hasOwnProperty(event)) {\r\n            this._events[event] = []\r\n        }\r\n        this._events[event].push(fun)\r\n    }\r\n\r\n    fire(event, ...parameters) {\r\n        if (this._events.hasOwnProperty(event)) {\r\n            for (let fun of this._events[event]) {\r\n                fun(...parameters)\r\n            }\r\n        }\r\n    }\r\n\r\n    log(...msg) {\r\n        if (this.printDebug) {\r\n            console.log(...msg)\r\n        }\r\n    }\r\n}\r\n","export default class ServerInfo {\r\n    constructor(ip, online = false, rooms = [], loading = true, room='') {\r\n        this.ip = ip;\r\n        this.online = online;\r\n        this.rooms = rooms;\r\n        this.loading = loading;\r\n        this.room = room;\r\n    }\r\n}\r\n","<template>\r\n    <div class=\"server-browser\">\r\n            <md-list class=\"server-list\">\r\n\r\n                <md-list-item>\r\n                    <div class=\"md-list-item-text\">\r\n                        <md-field>\r\n                            <label>Add new server</label>\r\n                            <md-input v-model=\"serverIp\"></md-input>\r\n                        </md-field>\r\n                    </div>\r\n\r\n                    <md-button type=\"submit\" class=\"md-icon-button md-list-action\"\r\n                               @click=\"addServer(serverIp); serverIp=''\">\r\n                        <md-icon>add</md-icon>\r\n                    </md-button>\r\n                </md-list-item>\r\n\r\n                <md-list-item v-for=\"server in servers\" :key=\"server.ip\" :md-expand=\"server.online\"\r\n                              :md-expanded=\"server.online\">\r\n                    <md-icon :title=\"`Checking connection to ${server.ip}`\" v-if=\"server.loading\" class=\"rotate\">\r\n                        cached\r\n                    </md-icon>\r\n                    <md-icon :title=\"`${server.ip} is online`\" v-else-if=\"server.online\"\r\n                             :class=\"server.ip === connectedServer.ip?'md-primary' : ''\">rss_feed\r\n                    </md-icon>\r\n                    <md-icon :title=\"`${server.ip} is offline`\" v-else>error_outline</md-icon>\r\n\r\n                    <div class=\"md-list-item-text\" :title=\"server.ip\">\r\n                        {{server.ip}}\r\n                    </div>\r\n                    <md-button class=\"md-icon-button md-list-action\"\r\n                               :title=\"`Remove ${server.ip} from list`\"\r\n                               v-if=\"server.ip!==connectedServer.ip\"\r\n                               @click=\"removeServer(server.ip)\">\r\n                        <md-icon>delete</md-icon>\r\n                    </md-button>\r\n\r\n                    <md-list slot=\"md-expand\">\r\n                        <md-list-item class=\"md-inset\">\r\n                            <div class=\"md-list-item-text\">\r\n                                <md-field>\r\n                                    <label>Create room</label>\r\n                                    <md-input v-model=\"roomName\" required></md-input>\r\n                                    <span class=\"md-error\">Room cannot be empty</span>\r\n                                </md-field>\r\n                            </div>\r\n\r\n                            <md-button\r\n                                    :title=\"`Connect to ${server.ip}#${roomName}`\"\r\n                                    class=\"md-icon-button md-list-action md-primary\"\r\n                                    @click=\"connectServer(server, roomName); roomName=''\">\r\n                                <md-icon>keyboard_arrow_right</md-icon>\r\n                            </md-button>\r\n                        </md-list-item>\r\n\r\n                        <md-list-item class=\"md-inset\" v-for=\"room in server.rooms\" :key=\"room.name\">\r\n                            <div class=\"md-list-item-text\" :title=\"`${server.ip}#${room.name}`\">\r\n                                <span>{{room.name}}</span>\r\n                                <span v-if=\"server.online\">Users online: {{room.userCount}}</span>\r\n                            </div>\r\n                            <md-button class=\"md-icon-button md-list-action\"\r\n                                       :title=\"`Disconnect from ${server.ip}#${room.name}`\"\r\n                                       v-if=\"room.name === server.room && server.ip === connectedServer.ip\"\r\n                                       @click=\"disconnectServer(server.ip)\">\r\n                                <md-icon>stop</md-icon>\r\n                            </md-button>\r\n                            <md-button class=\"md-icon-button md-list-action md-primary\"\r\n                                       :title=\"`Connect to ${server.ip}#${room.name}`\"\r\n                                       v-else\r\n                                       @click=\"connectServer(server, room.name)\">\r\n                                <md-icon>keyboard_arrow_right</md-icon>\r\n                            </md-button>\r\n                        </md-list-item>\r\n                    </md-list>\r\n\r\n                </md-list-item>\r\n            </md-list>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import SimplePeerMesh from '../js/SimplePeerMesh';\r\n    import ServerInfo from '../js/ServerInfo';\r\n\r\n    export default {\r\n        name: 'server-browser',\r\n        components: {},\r\n        props: ['room', 'server'],\r\n        data() {\r\n            return {\r\n                serverIp: 'https://ruurd.dev:5858',\r\n                roomName: '',\r\n                connectedServer: new ServerInfo('-1'),\r\n                serverUserCountUpdater: false,\r\n                servers: [],\r\n                meshNetwork: null,\r\n            }\r\n        },\r\n        async mounted() {\r\n            if (localStorage.getItem('servers') !== null)\r\n                JSON.parse(localStorage.servers).forEach(ip => {\r\n                    let info = new ServerInfo(ip);\r\n                    this.servers.push(info);\r\n                    this.updateServerInfo(ip, info)\r\n                });\r\n\r\n            if (this.servers.find(s => s.ip === this.serverIp))\r\n                this.serverIp = '';\r\n\r\n            this.serverUserCountUpdater = setInterval(async () => {\r\n                this.servers.forEach(s => this.updateServerInfo(s.ip, s));\r\n            }, 2000);\r\n\r\n            if (this.server) {\r\n                console.log('this.server', this.server);\r\n                if (!this.servers.find(s => s.ip === this.server))\r\n                    await this.addServer(this.server);\r\n                // this.servers.push(await this.updateServerInfo(this.server));\r\n\r\n                if (this.room) {\r\n                    console.log('this.room', this.room);\r\n                    this.connectServer(this.servers.find(s => s.ip === this.server), this.room);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async connectServer(server, room) {\r\n                if (this.meshNetwork) {\r\n                    this.disconnectServer(this.meshNetwork.url);\r\n                }\r\n\r\n                this.meshNetwork = new SimplePeerMesh();\r\n                this.meshNetwork.printDebug = false;\r\n\r\n                await this.meshNetwork.connect(server.ip, true);\r\n                this.updateServerInfo(server.ip, server);\r\n                await this.meshNetwork.join(room);\r\n\r\n                server.room = room;\r\n                this.connectedServer = server;\r\n\r\n                this.$route.params.server = server.ip;\r\n                this.$route.params.room = room;\r\n\r\n                this.$emit('connect', this.meshNetwork);\r\n            },\r\n            async updateServerInfo(ip, refObj = false) {\r\n                let rooms = await SimplePeerMesh.getServerRooms(ip);\r\n                let online = rooms !== null;\r\n                // console.log('Updating server user count', ip, rooms);\r\n                rooms = rooms || [];\r\n                if (refObj !== false) {\r\n                    refObj.online = online;\r\n                    refObj.rooms = rooms;\r\n                    refObj.loading = false\r\n                }\r\n                return new ServerInfo(ip, online, rooms, false);\r\n            },\r\n            async disconnectServer(ip) {\r\n                if (ip === this.meshNetwork.url) {\r\n                    this.meshNetwork.destroy();\r\n                    this.$emit('disconnect', this.meshNetwork);\r\n                    this.meshNetwork = null;\r\n                    this.updateServerInfo(this.connectedServer.ip, this.connectedServer);\r\n                    this.connectedServer = new ServerInfo('-1');\r\n                } else {\r\n                    console.warn(\"cannot disconnect from this server, you're not connected to it\");\r\n                }\r\n            },\r\n            removeServer(ip) {\r\n                if (this.servers.find(s => s.ip === ip)) {\r\n                    this.servers.splice(this.servers.findIndex(s => s.ip === ip), 1);\r\n                    localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                }\r\n            },\r\n            async addServer(ip) {\r\n                console.log(\"adding server\", ip);\r\n                if (this.servers.find(s => s.ip === ip))\r\n                    return;\r\n                let serverInfo = new ServerInfo(ip);\r\n                this.servers.push(serverInfo);\r\n                localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                await this.updateServerInfo(ip, serverInfo);\r\n                console.log(\"Server info: \", serverInfo);\r\n            },\r\n        },\r\n        beforeDestroy() {\r\n            clearInterval(this.serverUserCountUpdater);\r\n            if(this.meshNetwork)\r\n                this.meshNetwork.destroy();\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .server-browser {\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list {\r\n        padding: 15px;\r\n        height: 100%;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    .rotate {\r\n        animation: spin 1s infinite linear reverse;\r\n    }\r\n\r\n    .md-card-media.md-ratio-16-9 img {\r\n        filter: blur(2px) !important;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ServerBrowser.vue?vue&type=template&id=a1058e88&scoped=true&\"\nimport script from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ServerBrowser.vue?vue&type=style&index=0&id=a1058e88&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a1058e88\",\n  null\n  \n)\n\nexport default component.exports","<!--TODO: Show online members somewhere-->\n<!--TODO: Voice chat-->\n\n<template>\n    <div class=\"home\">\n        <server-browser class=\"browser\"\n                        :active=\"showServerBrowser || innerWidth > 750\"\n                        :server=\"$route.query.server\"\n                        :room=\"$route.query.room\"\n                        v-on:connect=\"connected\"\n                        v-on:disconnect=\"disconnected\"></server-browser>\n        <md-button v-if=\"innerWidth <= 750\"\n                   class=\"md-fab md-mini browser-fab\"\n                   :active=\"showServerBrowser || innerWidth > 750\"\n                   @click=\"showServerBrowser = !showServerBrowser\">\n            <md-icon>menu</md-icon>\n        </md-button>\n        <div class=\"overlay\" v-if=\"showServerBrowser && innerWidth <= 750\" @click=\"showServerBrowser=false\"></div>\n        <md-content class=\"main-content\">\n            <md-empty-state\n                    v-if=\"this.peerMesh === null\"\n                    md-icon=\"devices_other\"\n                    md-label=\"Connect to a server to begin\"\n                    md-description=\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\">\n            </md-empty-state>\n            <md-content v-else class=\"chat-box\">\n                <h3 @click=\"promptActive=!promptActive\">Your name: {{state.user}}</h3>\n                <md-dialog-prompt\n                        :md-active.sync=\"promptActive\"\n                        v-model=\"state.user\"\n                        md-title=\"What's your name?\"\n                        md-input-placeholder=\"Type your new username...\"\n                        md-confirm-text=\"Done\"/>\n                <md-list class=\"messages-list\" v-if=\"messages.length > 0\" ref=\"messagesList\" :key=\"listKey\">\n                    <md-list-item v-for=\"message in messages\" class=\"message-item\">\n                        <div class=\"md-list-item-text message\"\n                             :me=\"message.from === 'me'\">\n                            <span :style=\"`color: ${message.color}`\"\n                                  v-if=\"message.show\">{{idStates[message.from].user}}</span>\n                            <span>{{message.text}}</span>\n                        </div>\n                    </md-list-item>\n                </md-list>\n                <md-field>\n                    <label>Type a message</label>\n                    <md-input @keypress.enter=\"sendMessage(message);message=''\" v-model=\"message\"></md-input>\n                </md-field>\n            </md-content>\n        </md-content>\n    </div>\n</template>\n\n<script>\n    import ServerBrowser from \"@/components/ServerBrowser\";\n    import rug from 'random-username-generator';\n    import ColorHash from 'color-hash';\n\n    export default {\n        name: 'home',\n        components: {ServerBrowser},\n        data() {\n            return {\n                colorHash: new ColorHash(),\n                innerWidth: window.innerWidth,\n                listKey: 0,\n                promptActive: false,\n                showServerBrowser: true,\n                message: '',\n                messages: [],\n                peerMesh: null,\n                idStates: {},\n                state: {\n                    user: rug.generate()\n                }\n            }\n        },\n        async mounted() {\n            if (localStorage.getItem('userName') !== null)\n                this.state.user = localStorage.userName;\n            this.idStates['me'] = this.state;\n            window.addEventListener('resize', () => this.innerWidth = innerWidth);\n        },\n        methods: {\n            sendMessage(message) {\n                if (!this.peerMesh) return;\n\n                this.showMessage('me', message);\n                this.peerMesh.broadcast(JSON.stringify({\n                    event: 'message',\n                    value: message\n                }));\n            },\n            showMessage(sender, message) {\n                let msgObject = {text: message, from: sender, color: this.colorHash.hex(sender), show: true};\n                let lastChat = this.messages[this.messages.length - 1];\n\n                if (lastChat && lastChat.from === sender)\n                    msgObject.show = false;\n\n                this.messages.push(msgObject);\n                console.log(msgObject);\n\n                setTimeout(() => {\n                    let items = document.querySelectorAll('.message-item');\n                    let lastChat = items[items.length - 1];\n                    if (lastChat)\n                        lastChat.scrollIntoView();\n                });\n            },\n            connected(peerMesh) {\n                this.showServerBrowser = false;\n                this.peerMesh = peerMesh;\n\n                this.$router.replace({\n                    query: {\n                        room: peerMesh.room,\n                        server: peerMesh.url\n                    }\n                });\n\n                console.log(\"Connected\", peerMesh);\n                this.broadcast('initialState', this.state);\n\n                peerMesh.on('connect', id => {\n                    console.log(\"New connection\");\n                });\n\n                peerMesh.on('data', (id, data) => {\n                    let dataObj = JSON.parse(data.toString());\n                    switch (dataObj.event) {\n                        case 'initialState':\n                            console.log('initialState, replying with my state', id, dataObj.value);\n                            this.idStates[id] = dataObj.value;\n                            console.log(\"FORCING UPDATE\");\n                            this.forceListUpdate();\n                            this.send(id, 'state', this.state);\n                            break;\n                        case 'state':\n                            console.log('updating state', id, dataObj.value);\n                            this.idStates[id] = dataObj.value;\n                            console.log(\"FORCING UPDATE\");\n                            this.forceListUpdate();\n                            break;\n                        case 'message':\n                            console.log('receiving message', id, dataObj.value);\n                            this.showMessage(id, dataObj.value);\n                            break;\n                        default:\n                            console.log(\"Unknown event\", dataObj);\n                            break;\n                    }\n                });\n                peerMesh.on('stream', (id, stream) => {\n                    console.log({stream, id});\n                });\n            },\n            forceListUpdate() {\n                this.listKey++;\n                setTimeout(() => {\n                    let items = document.querySelectorAll('.message-item');\n                    let lastChat = items[items.length - 1];\n                    if (lastChat)\n                        lastChat.scrollIntoView();\n                });\n            },\n            disconnected(peerMesh) {\n                this.$router.replace({});\n                this.peerMesh = null;\n                console.log(\"Disconnected\", peerMesh);\n            },\n            send(id, event, value) {\n                if (this.peerMesh && this.peerMesh.peers.hasOwnProperty(id)) {\n                    this.peerMesh.peers[id].send(JSON.stringify({\n                        event: event,\n                        value: value\n                    }))\n                }\n            },\n            broadcast(event, value) {\n                if (this.peerMesh) {\n                    this.peerMesh.broadcast(JSON.stringify({\n                        event: event,\n                        value: value\n                    }))\n                }\n            },\n        },\n        watch: {\n            state: {\n                handler() {\n                    localStorage.userName = this.state.user;\n                    this.forceListUpdate();\n                    this.broadcast('state', this.state);\n                },\n                deep: true\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n    .messages-list {\n        overflow-y: auto;\n    }\n\n    .message[me] * {\n        text-align: right !important;\n    }\n\n    .home {\n        display: flex;\n        height: 100vh;\n    }\n\n    .browser-fab {\n        position: fixed;\n        transition: transform 0.2s;\n    }\n\n    .browser-fab[active] {\n        transform: translateX(400px);\n    }\n\n    .browser {\n        position: fixed;\n        width: 400px;\n        transform: translateX(-400px);\n        height: 100%;\n        z-index: 2;\n        box-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);\n        transition: transform 0.2s, box-shadow 0.2s;\n    }\n\n    .browser[active] {\n        transform: translateX(0px);\n    }\n\n    .overlay {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n        background-color: rgba(0, 0, 0, 0.3);\n    }\n\n    .main-content {\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        padding: 15px;\n        padding-bottom: 0px;\n        /*box-shadow: inset 0 0 0 5000000px rgba(0, 0, 0, 0.03);*/\n        transition: left 0.2s;\n    }\n\n    .chat-box {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        height: 100%;\n    }\n\n    @media only screen and (min-width: 750px) {\n        .main-content {\n            left: 400px;\n            width: calc(100% - 400px);\n        }\n    }\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=27f45817&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=27f45817&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27f45817\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\n\nVue.use(Router);\n\nexport default new Router({\n    routes: [\n        {\n            path: '/',\n            name: 'home',\n            component: Home\n        },\n    ]\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport VueMaterial from 'vue-material'\r\nimport 'vue-material/dist/vue-material.min.css'\r\nimport 'vue-material/dist/theme/default.css'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.use(VueMaterial);\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=a1058e88&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=a1058e88&scoped=true&lang=css&\""],"sourceRoot":""}