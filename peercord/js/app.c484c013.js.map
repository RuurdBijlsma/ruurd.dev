{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/App.vue?c8f9","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/views/Home.vue?92fb","webpack:///./src/components/ServerBrowser.vue?539d","webpack:///./src/js/SimplePeerMesh.js","webpack:///./src/js/ServerInfo.js","webpack:///src/components/ServerBrowser.vue","webpack:///./src/components/ServerBrowser.vue?6141","webpack:///./src/components/ServerBrowser.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router.js","webpack:///./src/main.js","webpack:///./src/views/Home.vue?0de3","webpack:///./src/components/ServerBrowser.vue?62e9"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_15d87d6a_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","script","component","componentNormalizer","App","register","concat","process","ready","console","log","registered","cached","updatefound","updated","offline","error","Homevue_type_template_id_26aa2fb5_scoped_true_render","staticClass","_l","state","listKey","volume","muted","mute","autoplay","domProps","srcObject","stream","md-mode","md-scrollbar","on","click","$event","menuVisible","_v","md-active","update:mdActive","update:md-active","server","$route","query","room","connect","connected","disconnect","disconnected","ref","elementId","options","contextOptions","option-clicked","optionClicked","peerMesh","contextmenu","preventDefault","stopPropagation","handleClick","_s","user","_e","md-icon","md-label","md-description","promptActive","syncedState","md-title","md-input-placeholder","md-confirm-text","model","callback","$$v","$set","expression","messages","message","me","from","style","syncedIdStates","text","keypress","type","indexOf","_k","keyCode","sendMessage","Homevue_type_template_id_26aa2fb5_scoped_true_staticRenderFns","ServerBrowservue_type_template_id_1ff30c2b_scoped_true_render","serverIp","addServer","ip","md-expand","online","md-expanded","title","class","connectedServer","removeServer","slot","required","roomName","connectServer","userCount","disconnectServer","ServerBrowservue_type_template_id_1ff30c2b_scoped_true_staticRenderFns","SimplePeerMesh","trickle","arguments","undefined","wrtc","classCallCheck","socket","url","peers","_events","_eventQueue","printDebug","roomCount","socketId","broadcastedStream","_this","Promise","resolve","roomCountEventCallback","emit","fullConnectEventCallback","off","_this2","webSocketOnly","reject","transports","socketIo","fire","checkFullConnect","e","mySocketId","createPeer","destroy","getConnectedPeerCount","_ref","_ref2","slicedToArray","signal","peer","send","JSON","stringify","addStream","removeStream","initiator","_this3","Peer","err","peerCount","track","count","close","event","fun","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","queueItem","_fire","toConsumableArray","parameters","return","_len","Array","_key","_len2","_key2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_console","fetch","response","json","ServerInfo","rooms","loading","ServerBrowservue_type_script_lang_js_","components","props","ServerInfo_ServerInfo","serverUserCountUpdater","servers","meshNetwork","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee2","wrap","_context2","prev","localStorage","getItem","parse","forEach","info","updateServerInfo","find","setInterval","_callee","_context","stop","methods","_connectServer","_callee3","_context3","SimplePeerMesh_SimplePeerMesh","join","params","$emit","_x","_x2","_updateServerInfo","_callee4","refObj","_args4","_context4","getServerRooms","sent","abrupt","_x3","_disconnectServer","_callee5","_context5","warn","_x4","findIndex","map","_addServer","_callee6","serverInfo","_context6","_x5","beforeDestroy","clearInterval","components_ServerBrowservue_type_script_lang_js_","ServerBrowser_component","ServerBrowser","Homevue_type_script_lang_js_","colorHash","color_hash_default","a","innerWidth","showServerBrowser","privateIdStates","random_username_generator_default","generate","userName","addEventListener","item","$refs","vueSimpleContextMenu","showMenu","alert","showMessage","broadcast","sender","msgObject","color","hex","show","lastChat","setTimeout","items","document","querySelectorAll","scrollIntoView","getMicrophone","_getMicrophone","navigator","mediaDevices","getUserMedia","audio","video","_connected","$router","replace","forceListUpdate","dataObj","toString","t0","t1","broadcastStream","watch","handler","deep","cancelAnimationFrame","interval","views_Homevue_type_script_lang_js_","Home_component","Home","Vue","use","Router","router","routes","path","config","productionTip","VueSimpleContextMenu","VueMaterial","render","h","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_26aa2fb5_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_26aa2fb5_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_1ff30c2b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ServerBrowser_vue_vue_type_style_index_0_id_1ff30c2b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.c484c013.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/peercord/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=15d87d6a&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_vm._l((_vm.privateIdStates),function(state){return _c('audio',{key:_vm.listKey,attrs:{\"volume\":state.volume,\"muted\":state.mute,\"autoplay\":\"\"},domProps:{\"srcObject\":state.stream}})}),_c('md-app',{attrs:{\"md-mode\":\"fixed\",\"md-scrollbar\":false}},[_c('md-app-toolbar',{staticClass:\"md-primary\"},[_c('md-button',{staticClass:\"md-icon-button\",on:{\"click\":function($event){_vm.menuVisible = !_vm.menuVisible}}},[_c('md-icon',[_vm._v(\"menu\")])],1),_c('span',{staticClass:\"md-title\"},[_vm._v(\"Peercord\")])],1),_c('md-app-drawer',{attrs:{\"md-active\":_vm.menuVisible},on:{\"update:mdActive\":function($event){_vm.menuVisible=$event},\"update:md-active\":function($event){_vm.menuVisible=$event}}},[_c('server-browser',{attrs:{\"server\":_vm.$route.query.server,\"room\":_vm.$route.query.room},on:{\"connect\":_vm.connected,\"disconnect\":_vm.disconnected}})],1),_c('md-app-content',{staticClass:\"main-content\"},[_c('vue-simple-context-menu',{ref:'vueSimpleContextMenu',attrs:{\"elementId\":'myUniqueId',\"options\":_vm.contextOptions},on:{\"option-clicked\":_vm.optionClicked}}),(_vm.peerMesh !== null)?_c('md-list',{key:_vm.listKey,staticClass:\"md-accent\"},[_c('md-subheader',[_vm._v(\"Online users\")]),_vm._l((_vm.syncedIdStates),function(state){return _c('md-list-item',{on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.handleClick($event, state)}}},[_c('md-icon',[_vm._v(\"account_circle\")]),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(_vm._s(state.user))])],1)})],2):_vm._e(),(this.peerMesh === null)?_c('md-empty-state',{attrs:{\"md-icon\":\"devices_other\",\"md-label\":\"Connect to a server to begin\",\"md-description\":\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\"}}):_c('md-content',{staticClass:\"chat-box\"},[_c('h3',{on:{\"click\":function($event){_vm.promptActive=!_vm.promptActive}}},[_vm._v(\"Your name: \"+_vm._s(_vm.syncedState.user))]),_c('md-dialog-prompt',{attrs:{\"md-active\":_vm.promptActive,\"md-title\":\"What's your name?\",\"md-input-placeholder\":\"Type your new username...\",\"md-confirm-text\":\"Done\"},on:{\"update:mdActive\":function($event){_vm.promptActive=$event},\"update:md-active\":function($event){_vm.promptActive=$event}},model:{value:(_vm.syncedState.user),callback:function ($$v) {_vm.$set(_vm.syncedState, \"user\", $$v)},expression:\"syncedState.user\"}}),(_vm.messages.length > 0)?_c('md-list',{key:_vm.listKey,ref:\"messagesList\",staticClass:\"messages-list\"},_vm._l((_vm.messages),function(message){return _c('md-list-item',{staticClass:\"message-item\"},[_c('div',{staticClass:\"md-list-item-text message\",attrs:{\"me\":message.from === 'me'}},[(message.show)?_c('span',{style:((\"color: \" + (message.color)))},[_vm._v(_vm._s(_vm.syncedIdStates[message.from].user))]):_vm._e(),_c('span',[_vm._v(_vm._s(message.text))])])])}),1):_vm._e(),_c('md-field',[_c('label',[_vm._v(\"Type a message\")]),_c('md-input',{on:{\"keypress\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }_vm.sendMessage(_vm.message);_vm.message=''}},model:{value:(_vm.message),callback:function ($$v) {_vm.message=$$v},expression:\"message\"}})],1)],1)],1)],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"server-browser\"},[_c('md-list',{staticClass:\"server-list\"},[_c('md-list-item',[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Add new server\")]),_c('md-input',{model:{value:(_vm.serverIp),callback:function ($$v) {_vm.serverIp=$$v},expression:\"serverIp\"}})],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"type\":\"submit\"},on:{\"click\":function($event){_vm.addServer(_vm.serverIp); _vm.serverIp=''}}},[_c('md-icon',[_vm._v(\"add\")])],1)],1),_vm._l((_vm.servers),function(server){return _c('md-list-item',{key:server.ip,attrs:{\"md-expand\":server.online,\"md-expanded\":server.online}},[(server.loading)?_c('md-icon',{staticClass:\"rotate\",attrs:{\"title\":(\"Checking connection to \" + (server.ip))}},[_vm._v(\"\\n                    cached\\n                \")]):(server.online)?_c('md-icon',{class:server.ip === _vm.connectedServer.ip?'md-primary' : '',attrs:{\"title\":((server.ip) + \" is online\")}},[_vm._v(\"rss_feed\\n                \")]):_c('md-icon',{attrs:{\"title\":((server.ip) + \" is offline\")}},[_vm._v(\"error_outline\")]),_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":server.ip}},[_vm._v(\"\\n                    \"+_vm._s(server.ip)+\"\\n                \")]),(server.ip!==_vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Remove \" + (server.ip) + \" from list\")},on:{\"click\":function($event){return _vm.removeServer(server.ip)}}},[_c('md-icon',[_vm._v(\"delete\")])],1):_vm._e(),_c('md-list',{attrs:{\"slot\":\"md-expand\"},slot:\"md-expand\"},[_c('md-list-item',{staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\"},[_c('md-field',[_c('label',[_vm._v(\"Create room\")]),_c('md-input',{attrs:{\"required\":\"\"},model:{value:(_vm.roomName),callback:function ($$v) {_vm.roomName=$$v},expression:\"roomName\"}}),_c('span',{staticClass:\"md-error\"},[_vm._v(\"Room cannot be empty\")])],1)],1),_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + _vm.roomName)},on:{\"click\":function($event){_vm.connectServer(server, _vm.roomName); _vm.roomName=''}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1),_vm._l((server.rooms),function(room){return _c('md-list-item',{key:room.name,staticClass:\"md-inset\"},[_c('div',{staticClass:\"md-list-item-text\",attrs:{\"title\":((server.ip) + \"#\" + (room.name))}},[_c('span',[_vm._v(_vm._s(room.name))]),(server.online)?_c('span',[_vm._v(\"Users online: \"+_vm._s(room.userCount))]):_vm._e()]),(room.name === server.room && server.ip === _vm.connectedServer.ip)?_c('md-button',{staticClass:\"md-icon-button md-list-action\",attrs:{\"title\":(\"Disconnect from \" + (server.ip) + \"#\" + (room.name))},on:{\"click\":function($event){return _vm.disconnectServer(server.ip)}}},[_c('md-icon',[_vm._v(\"stop\")])],1):_c('md-button',{staticClass:\"md-icon-button md-list-action md-primary\",attrs:{\"title\":(\"Connect to \" + (server.ip) + \"#\" + (room.name))},on:{\"click\":function($event){return _vm.connectServer(server, room.name)}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_right\")])],1)],1)})],2)],1)})],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Peer from 'simple-peer'\r\nimport socketIo from 'socket.io-client'\r\n\r\nexport default class SimplePeerMesh {\r\n    constructor(trickle = true, wrtc = false) {\r\n        this.wrtc = wrtc;\r\n        this.trickle = trickle;\r\n        this.socket = null;\r\n        this.url = '';\r\n        this.peers = {};\r\n        this._events = {};\r\n        this._eventQueue = [];\r\n        this.printDebug = false;\r\n        this.roomCount = -1;\r\n        this.room = '';\r\n        this.socketId = '';\r\n        this.broadcastedStream = null;\r\n    }\r\n\r\n    static async getServerRooms(url) {\r\n        if (url[url.length - 1] !== '/')\r\n            url += '/';\r\n\r\n        try {\r\n            let response = await fetch(url + 'rooms');\r\n            return await response.json()\r\n        } catch (e) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    join(room) {\r\n        this.room = room;\r\n        // Waiting for this promise is dangerous, room count might be incorrect on the server due to bad disconnect\r\n        return new Promise(resolve => {\r\n            this.socket.emit('join', room);\r\n            let roomCountEventCallback;\r\n            roomCountEventCallback = () => {\r\n                if (this.roomCount === 1) // Alone in the room\r\n                {\r\n                    resolve()\r\n                } else { // Wait until all peer connections are complete\r\n                    let fullConnectEventCallback;\r\n                    fullConnectEventCallback = () => {\r\n                        resolve();\r\n                        this.off('fullConnect', fullConnectEventCallback)\r\n                    };\r\n                    this.on('fullConnect', fullConnectEventCallback)\r\n                }\r\n                this.off('roomCount', roomCountEventCallback)\r\n            };\r\n            this.on('roomCount', roomCountEventCallback)\r\n        })\r\n    }\r\n\r\n    // On node/electron webSocketOnly might be necessary\r\n    connect(url, webSocketOnly = false) {\r\n        return new Promise((resolve, reject) => {\r\n            this.url = url;\r\n            let transports = ['websocket'];\r\n            if (!webSocketOnly) {\r\n                transports.push('polling')\r\n            }\r\n\r\n            this.socket = socketIo(url, {transports});\r\n\r\n            this.socket.on('roomCount', roomCount => {\r\n                this.roomCount = roomCount;\r\n                this.log('New room count: ' + roomCount + ' users');\r\n                this.fire('roomCount', roomCount);\r\n                this.checkFullConnect()\r\n            });\r\n\r\n            this.socket.on('connect', () => {\r\n                resolve(this.socket);\r\n                this.log('Connected to socket server')\r\n            });\r\n\r\n            this.socket.on('connect_error', e => {\r\n                this.log('Error connecting to socket server', e);\r\n                reject(e)\r\n            });\r\n\r\n            this.socket.on('socketId', mySocketId => {\r\n                this.log(`My socket id = ${mySocketId}`);\r\n                this.fire('socketId', mySocketId);\r\n                this.socketId = mySocketId;\r\n            });\r\n\r\n            this.socket.on('initialize', socketId => {\r\n                this.log('Initializing with ', socketId);\r\n                this.peers[socketId] = this.createPeer(socketId, true)\r\n            });\r\n\r\n            this.socket.on('destroy', socketId => {\r\n                if (this.peers.hasOwnProperty(socketId)) {\r\n                    this.peers[socketId].destroy();\r\n                    delete this.peers[socketId];\r\n                    this.fire('disconnect', socketId);\r\n                    this.log('Destroying peer', socketId, 'peer count:', this.getConnectedPeerCount())\r\n                } else {\r\n                    this.log('Unable to destroy peer, it does not exist')\r\n                }\r\n            });\r\n            this.socket.on('signal', ([socketId, signal]) => {\r\n                this.log('Receiving signal from ', socketId);\r\n\r\n                if (!this.peers.hasOwnProperty(socketId)) {\r\n                    this.log(`${socketId} is initializing with me`);\r\n                    this.peers[socketId] = this.createPeer(socketId, false)\r\n                }\r\n\r\n                this.log(`Signalling ${socketId}`, signal);\r\n                this.peers[socketId].signal(signal)\r\n            })\r\n        })\r\n    }\r\n\r\n    broadcast(message) {\r\n        this.log(`Broadcasting to ${this.getConnectedPeerCount()} peers: ${message}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null) {\r\n                console.log('broadcasting ', message);\r\n                if (typeof message === 'string')\r\n                    this.peers[peer].send(message);\r\n                else\r\n                    this.peers[peer].send(JSON.stringify(message));\r\n            }\r\n    }\r\n\r\n    send(id, message) {\r\n        this.log(`Sending to ${id}: ${message}`);\r\n\r\n        if (this.peers.hasOwnProperty(id) && this.peers[id] !== null) {\r\n            console.log('broadcasting ', message);\r\n            if (typeof message === 'string')\r\n                this.peers[id].send(message);\r\n            else\r\n                this.peers[id].send(JSON.stringify(message));\r\n        }\r\n    }\r\n\r\n    broadcastStream(stream) {\r\n        this.broadcastedStream = stream;\r\n        this.log(`Broadcasting stream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer] !== null) {\r\n                    this.peers[peer].addStream(stream)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    sendStream(id, stream) {\r\n        this.log(`Sending stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].addStream(stream);\r\n    }\r\n\r\n    removeStream(id, stream) {\r\n        this.log(`Removing stream to ${id}: ${stream}`);\r\n        if (this.peers.hasOwnProperty(id && this.peers[id] !== null))\r\n            this.peers[id].removeStream(stream);\r\n    }\r\n\r\n    broadcastRemoveStream(stream) {\r\n        this.broadcastedStream = null;\r\n        this.log(`broadcastRemoveStream to ${this.getConnectedPeerCount()} peers: ${stream}`);\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer) && this.peers[peer] !== null)\r\n                this.peers[peer].removeStream(stream);\r\n    }\r\n\r\n    createPeer(socketId, initiator) {\r\n        let options = {initiator, trickle: this.trickle};\r\n        if (this.wrtc) {\r\n            options.wrtc = this.wrtc;\r\n            this.log('Using wrtc', options)\r\n        }\r\n        if (this.broadcastedStream !== null) {\r\n            options.stream = this.broadcastedStream;\r\n        }\r\n        let peer = new Peer(options);\r\n        peer.on('error', err => {\r\n            this.fire('error', peer, socketId, {peer, error: err, initiator});\r\n            this.log('error', err)\r\n        });\r\n\r\n        peer.on('signal', data => {\r\n            this.log(`Emitting signal to socket: ${socketId}`);\r\n            // if (data.renegotiate) {\r\n            //     this.peers[socketId].destroy();\r\n            //     delete this.peers[socketId]\r\n            // }\r\n            this.socket.emit('message', [socketId, 'signal', data])\r\n        });\r\n\r\n        peer.on('connect', () => {\r\n            let peerCount = this.getConnectedPeerCount();\r\n            this.log('New peer connection, peer count: ', peerCount);\r\n            this.fire('connect', socketId);\r\n            this.checkFullConnect();\r\n        });\r\n\r\n        peer.on('data', data => {\r\n            this.fire('data', socketId, data);\r\n            this.log('data: ' + data)\r\n        });\r\n\r\n        peer.on('stream', stream => {\r\n            this.fire('stream', socketId, stream);\r\n            this.log('stream: ', stream)\r\n        });\r\n\r\n        peer.on('track', (track, stream) => {\r\n            this.fire('track', track, socketId, stream);\r\n            this.log('track: ', track, 'stream', stream)\r\n        });\r\n\r\n        peer.on('close', () => this.log('Peer connection closed', peer));\r\n\r\n        return peer\r\n    }\r\n\r\n    getConnectedPeerCount() {\r\n        let count = 0;\r\n        for (let peer in this.peers) {\r\n            if (this.peers.hasOwnProperty(peer)) {\r\n                if (this.peers[peer].connected) count++\r\n            }\r\n        }\r\n        return count\r\n    }\r\n\r\n    checkFullConnect() {\r\n        let peerCount = this.getConnectedPeerCount();\r\n        if (peerCount + 1 >= this.roomCount) {\r\n            this.log('Fully connected to room, peer count: ', peerCount, 'room count: ', this.roomCount);\r\n            this.fire('fullConnect')\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.socket.close();\r\n        for (let peer in this.peers)\r\n            if (this.peers.hasOwnProperty(peer))\r\n                this.peers[peer].destroy()\r\n    }\r\n\r\n    off(event, fun) {\r\n        if (this._events.hasOwnProperty(event)) {\r\n            this._events[event].splice(this._events[event].indexOf(fun), 1)\r\n        }\r\n    }\r\n\r\n    on(event, fun) {\r\n        if (!this._events.hasOwnProperty(event))\r\n            this._events[event] = [];\r\n\r\n        this._events[event].push(fun);\r\n\r\n        for (let queueItem of this._eventQueue)\r\n            if (queueItem.event === event)\r\n                this._fire(queueItem.event, ...queueItem.parameters);\r\n    }\r\n\r\n    fire(event, ...parameters) {\r\n        this._eventQueue.push({event, parameters});\r\n\r\n        this._fire(event, ...parameters);\r\n    }\r\n\r\n    _fire(event, ...parameters) {\r\n        if (this._events.hasOwnProperty(event)) {\r\n            for (let fun of this._events[event]) {\r\n                fun(...parameters)\r\n            }\r\n        }\r\n    }\r\n\r\n    log(...msg) {\r\n        if (this.printDebug) {\r\n            console.log(...msg)\r\n        }\r\n    }\r\n}\r\n","export default class ServerInfo {\r\n    constructor(ip, online = false, rooms = [], loading = true, room='') {\r\n        this.ip = ip;\r\n        this.online = online;\r\n        this.rooms = rooms;\r\n        this.loading = loading;\r\n        this.room = room;\r\n    }\r\n}\r\n","<template>\r\n    <div class=\"server-browser\">\r\n            <md-list class=\"server-list\">\r\n\r\n                <md-list-item>\r\n                    <div class=\"md-list-item-text\">\r\n                        <md-field>\r\n                            <label>Add new server</label>\r\n                            <md-input v-model=\"serverIp\"></md-input>\r\n                        </md-field>\r\n                    </div>\r\n\r\n                    <md-button type=\"submit\" class=\"md-icon-button md-list-action\"\r\n                               @click=\"addServer(serverIp); serverIp=''\">\r\n                        <md-icon>add</md-icon>\r\n                    </md-button>\r\n                </md-list-item>\r\n\r\n                <md-list-item v-for=\"server in servers\" :key=\"server.ip\" :md-expand=\"server.online\"\r\n                              :md-expanded=\"server.online\">\r\n                    <md-icon :title=\"`Checking connection to ${server.ip}`\" v-if=\"server.loading\" class=\"rotate\">\r\n                        cached\r\n                    </md-icon>\r\n                    <md-icon :title=\"`${server.ip} is online`\" v-else-if=\"server.online\"\r\n                             :class=\"server.ip === connectedServer.ip?'md-primary' : ''\">rss_feed\r\n                    </md-icon>\r\n                    <md-icon :title=\"`${server.ip} is offline`\" v-else>error_outline</md-icon>\r\n\r\n                    <div class=\"md-list-item-text\" :title=\"server.ip\">\r\n                        {{server.ip}}\r\n                    </div>\r\n                    <md-button class=\"md-icon-button md-list-action\"\r\n                               :title=\"`Remove ${server.ip} from list`\"\r\n                               v-if=\"server.ip!==connectedServer.ip\"\r\n                               @click=\"removeServer(server.ip)\">\r\n                        <md-icon>delete</md-icon>\r\n                    </md-button>\r\n\r\n                    <md-list slot=\"md-expand\">\r\n                        <md-list-item class=\"md-inset\">\r\n                            <div class=\"md-list-item-text\">\r\n                                <md-field>\r\n                                    <label>Create room</label>\r\n                                    <md-input v-model=\"roomName\" required></md-input>\r\n                                    <span class=\"md-error\">Room cannot be empty</span>\r\n                                </md-field>\r\n                            </div>\r\n\r\n                            <md-button\r\n                                    :title=\"`Connect to ${server.ip}#${roomName}`\"\r\n                                    class=\"md-icon-button md-list-action md-primary\"\r\n                                    @click=\"connectServer(server, roomName); roomName=''\">\r\n                                <md-icon>keyboard_arrow_right</md-icon>\r\n                            </md-button>\r\n                        </md-list-item>\r\n\r\n                        <md-list-item class=\"md-inset\" v-for=\"room in server.rooms\" :key=\"room.name\">\r\n                            <div class=\"md-list-item-text\" :title=\"`${server.ip}#${room.name}`\">\r\n                                <span>{{room.name}}</span>\r\n                                <span v-if=\"server.online\">Users online: {{room.userCount}}</span>\r\n                            </div>\r\n                            <md-button class=\"md-icon-button md-list-action\"\r\n                                       :title=\"`Disconnect from ${server.ip}#${room.name}`\"\r\n                                       v-if=\"room.name === server.room && server.ip === connectedServer.ip\"\r\n                                       @click=\"disconnectServer(server.ip)\">\r\n                                <md-icon>stop</md-icon>\r\n                            </md-button>\r\n                            <md-button class=\"md-icon-button md-list-action md-primary\"\r\n                                       :title=\"`Connect to ${server.ip}#${room.name}`\"\r\n                                       v-else\r\n                                       @click=\"connectServer(server, room.name)\">\r\n                                <md-icon>keyboard_arrow_right</md-icon>\r\n                            </md-button>\r\n                        </md-list-item>\r\n                    </md-list>\r\n\r\n                </md-list-item>\r\n            </md-list>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import SimplePeerMesh from '../js/SimplePeerMesh';\r\n    import ServerInfo from '../js/ServerInfo';\r\n\r\n    export default {\r\n        name: 'server-browser',\r\n        components: {},\r\n        props: ['room', 'server'],\r\n        data() {\r\n            return {\r\n                serverIp: 'https://ruurd.dev:5858',\r\n                roomName: '',\r\n                connectedServer: new ServerInfo('-1'),\r\n                serverUserCountUpdater: false,\r\n                servers: [],\r\n                meshNetwork: null,\r\n            }\r\n        },\r\n        async mounted() {\r\n            if (localStorage.getItem('servers') !== null)\r\n                JSON.parse(localStorage.servers).forEach(ip => {\r\n                    let info = new ServerInfo(ip);\r\n                    this.servers.push(info);\r\n                    this.updateServerInfo(ip, info)\r\n                });\r\n\r\n            if (this.servers.find(s => s.ip === this.serverIp))\r\n                this.serverIp = '';\r\n\r\n            this.serverUserCountUpdater = setInterval(async () => {\r\n                this.servers.forEach(s => this.updateServerInfo(s.ip, s));\r\n            }, 2000);\r\n\r\n            if (this.server) {\r\n                if (!this.servers.find(s => s.ip === this.server))\r\n                    await this.addServer(this.server);\r\n                // this.servers.push(await this.updateServerInfo(this.server));\r\n\r\n                if (this.room) {\r\n                    this.connectServer(this.servers.find(s => s.ip === this.server), this.room);\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            async connectServer(server, room) {\r\n                if (this.meshNetwork) {\r\n                    this.disconnectServer(this.meshNetwork.url);\r\n                }\r\n\r\n                this.meshNetwork = new SimplePeerMesh();\r\n                this.meshNetwork.printDebug = false;\r\n\r\n                await this.meshNetwork.connect(server.ip, true);\r\n                this.updateServerInfo(server.ip, server);\r\n                await this.meshNetwork.join(room);\r\n\r\n                server.room = room;\r\n                this.connectedServer = server;\r\n\r\n                this.$route.params.server = server.ip;\r\n                this.$route.params.room = room;\r\n\r\n                this.$emit('connect', this.meshNetwork);\r\n            },\r\n            async updateServerInfo(ip, refObj = false) {\r\n                let rooms = await SimplePeerMesh.getServerRooms(ip);\r\n                let online = rooms !== null;\r\n\r\n                rooms = rooms || [];\r\n                if (refObj !== false) {\r\n                    refObj.online = online;\r\n                    refObj.rooms = rooms;\r\n                    refObj.loading = false\r\n                }\r\n                return new ServerInfo(ip, online, rooms, false);\r\n            },\r\n            async disconnectServer(ip) {\r\n                if (ip === this.meshNetwork.url) {\r\n                    this.meshNetwork.destroy();\r\n                    this.$emit('disconnect', this.meshNetwork);\r\n                    this.meshNetwork = null;\r\n                    this.updateServerInfo(this.connectedServer.ip, this.connectedServer);\r\n                    this.connectedServer = new ServerInfo('-1');\r\n                } else {\r\n                    console.warn(\"cannot disconnect from this server, you're not connected to it\");\r\n                }\r\n            },\r\n            removeServer(ip) {\r\n                if (this.servers.find(s => s.ip === ip)) {\r\n                    this.servers.splice(this.servers.findIndex(s => s.ip === ip), 1);\r\n                    localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                }\r\n            },\r\n            async addServer(ip) {\r\n                if (this.servers.find(s => s.ip === ip))\r\n                    return;\r\n                let serverInfo = new ServerInfo(ip);\r\n                this.servers.push(serverInfo);\r\n                localStorage.servers = JSON.stringify(this.servers.map(s => s.ip));\r\n                await this.updateServerInfo(ip, serverInfo);\r\n\r\n            },\r\n        },\r\n        beforeDestroy() {\r\n            clearInterval(this.serverUserCountUpdater);\r\n            if(this.meshNetwork)\r\n                this.meshNetwork.destroy();\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .server-browser {\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list {\r\n        padding: 15px;\r\n        height: 100%;\r\n        overflow-y: auto;\r\n    }\r\n\r\n    .server-list li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            transform: rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    .rotate {\r\n        animation: spin 1s infinite linear reverse;\r\n    }\r\n\r\n    .md-card-media.md-ratio-16-9 img {\r\n        filter: blur(2px) !important;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ServerBrowser.vue?vue&type=template&id=1ff30c2b&scoped=true&\"\nimport script from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./ServerBrowser.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ServerBrowser.vue?vue&type=style&index=0&id=1ff30c2b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1ff30c2b\",\n  null\n  \n)\n\nexport default component.exports","<!--TODO: Show online members somewhere-->\n<!--TODO: Voice chat-->\n\n<template>\n    <div class=\"home\">\n        <audio v-for=\"state in privateIdStates\" :srcObject.prop=\"state.stream\" :key=\"listKey\" :volume=\"state.volume\" :muted=\"state.mute\" autoplay></audio>\n\n        <md-app md-mode=\"fixed\" :md-scrollbar=\"false\">\n            <md-app-toolbar class=\"md-primary\">\n                <md-button class=\"md-icon-button\" @click=\"menuVisible = !menuVisible\">\n                    <md-icon>menu</md-icon>\n                </md-button>\n                <span class=\"md-title\">Peercord</span>\n            </md-app-toolbar>\n\n            <md-app-drawer :md-active.sync=\"menuVisible\">\n                <server-browser :server=\"$route.query.server\"\n                                :room=\"$route.query.room\"\n                                v-on:connect=\"connected\"\n                                v-on:disconnect=\"disconnected\"></server-browser>\n            </md-app-drawer>\n\n            <md-app-content class=\"main-content\">\n                <vue-simple-context-menu\n                        :elementId=\"'myUniqueId'\"\n                        :options=\"contextOptions\"\n                        :ref=\"'vueSimpleContextMenu'\"\n                        @option-clicked=\"optionClicked\">\n                </vue-simple-context-menu>\n\n                <md-list :key=\"listKey\" class=\"md-accent\" v-if=\"peerMesh !== null\">\n                    <md-subheader>Online users</md-subheader>\n                    <md-list-item v-for=\"state in syncedIdStates\"\n                                  @contextmenu.prevent.stop=\"handleClick($event, state)\">\n                        <md-icon>account_circle</md-icon>\n                        <span class=\"md-list-item-text\">{{state.user}}</span>\n                    </md-list-item>\n                </md-list>\n                <md-empty-state\n                        v-if=\"this.peerMesh === null\"\n                        md-icon=\"devices_other\"\n                        md-label=\"Connect to a server to begin\"\n                        md-description=\"Add a server on the menu to the left to start, then click the blue arrow next to a room to join that room.\">\n                </md-empty-state>\n                <md-content v-else class=\"chat-box\">\n                    <h3 @click=\"promptActive=!promptActive\">Your name: {{syncedState.user}}</h3>\n                    <md-dialog-prompt\n                            :md-active.sync=\"promptActive\"\n                            v-model=\"syncedState.user\"\n                            md-title=\"What's your name?\"\n                            md-input-placeholder=\"Type your new username...\"\n                            md-confirm-text=\"Done\"/>\n                    <md-list class=\"messages-list\" v-if=\"messages.length > 0\" ref=\"messagesList\" :key=\"listKey\">\n                        <md-list-item v-for=\"message in messages\" class=\"message-item\">\n                            <div class=\"md-list-item-text message\"\n                                 :me=\"message.from === 'me'\">\n                            <span :style=\"`color: ${message.color}`\"\n                                  v-if=\"message.show\">{{syncedIdStates[message.from].user}}</span>\n                                <span>{{message.text}}</span>\n                            </div>\n                        </md-list-item>\n                    </md-list>\n                    <md-field>\n                        <label>Type a message</label>\n                        <md-input @keypress.enter=\"sendMessage(message);message=''\" v-model=\"message\"></md-input>\n                    </md-field>\n                </md-content>\n            </md-app-content>\n        </md-app>\n    </div>\n</template>\n\n<script>\n    import ServerBrowser from \"@/components/ServerBrowser\";\n    import rug from 'random-username-generator';\n    import ColorHash from 'color-hash';\n\n\n    export default {\n        name: 'home',\n        components: {ServerBrowser},\n        data() {\n            return {\n                menuVisible: false,\n                colorHash: new ColorHash(),\n                innerWidth: window.innerWidth,\n                listKey: 0,\n                promptActive: false,\n                showServerBrowser: true,\n                message: '',\n                messages: [],\n                peerMesh: null,\n                privateIdStates: {},\n                syncedIdStates: {},\n                contextOptions: [{name: 'Mute'}, {name: 'Adjust volume'}],\n                syncedState: {\n                    user: rug.generate()\n                },\n            }\n        },\n        async mounted() {\n            if (localStorage.getItem('userName') !== null)\n                this.syncedState.user = localStorage.userName;\n            this.syncedIdStates['me'] = this.syncedState;\n            window.addEventListener('resize', () => this.innerWidth = innerWidth);\n        },\n        methods: {\n            handleClick(event, item) {\n                this.$refs.vueSimpleContextMenu.showMenu(event, item)\n            },\n            optionClicked(event) {\n                window.alert(JSON.stringify(event))\n            },\n            sendMessage(message) {\n                if (!this.peerMesh) return;\n                this.message = '';\n\n                this.showMessage('me', message);\n                this.peerMesh.broadcast(JSON.stringify({\n                    event: 'message',\n                    value: message\n                }));\n            },\n            showMessage(sender, message) {\n                let msgObject = {text: message, from: sender, color: this.colorHash.hex(sender), show: true};\n                let lastChat = this.messages[this.messages.length - 1];\n\n                if (lastChat && lastChat.from === sender)\n                    msgObject.show = false;\n\n                this.messages.push(msgObject);\n                console.log(msgObject);\n\n                setTimeout(() => {\n                    let items = document.querySelectorAll('.message-item');\n                    let lastChat = items[items.length - 1];\n                    if (lastChat)\n                        lastChat.scrollIntoView();\n                });\n            },\n            async getMicrophone() {\n                return await navigator.mediaDevices.getUserMedia({audio: true, video: false});\n            },\n            async connected(peerMesh) {\n\n                this.showServerBrowser = false;\n                this.peerMesh = peerMesh;\n\n                this.$router.replace({\n                    query: {\n                        room: peerMesh.room,\n                        server: peerMesh.url\n                    }\n                });\n\n                console.log(\"Connected\", peerMesh);\n                this.broadcast('initialState', this.syncedState);\n\n                peerMesh.on('connect', id => {\n                    console.log(\"New connection\");\n                });\n\n                peerMesh.on('disconnect', id => {\n                    delete this.syncedIdStates[id];\n                    delete this.privateIdStates[id];\n                    this.forceListUpdate();\n                });\n\n                peerMesh.on('data', (id, data) => {\n                    let dataObj = JSON.parse(data.toString());\n                    switch (dataObj.event) {\n                        case 'initialState':\n                            console.log('initialState, replying with my syncedState', id, dataObj.value);\n                            this.syncedIdStates[id] = dataObj.value;\n                            this.forceListUpdate();\n                            this.send(id, 'syncedState', this.syncedState);\n                            break;\n                        case 'syncedState':\n                            console.log('updating syncedState', id, dataObj.value);\n                            this.syncedIdStates[id] = dataObj.value;\n                            this.forceListUpdate();\n                            break;\n                        case 'message':\n                            console.log('receiving message', id, dataObj.value);\n                            this.showMessage(id, dataObj.value);\n                            break;\n                        default:\n                            console.log(\"Unknown event\", dataObj);\n                            break;\n                    }\n                });\n                peerMesh.on('stream', (id, stream) => {\n                    if (!this.privateIdStates[id])\n                        this.privateIdStates[id] = {};\n                    let state = this.privateIdStates[id];\n                    state.stream = stream;\n                    // state.volume = 1;\n                    // state.mute = false;\n                    console.log(state);\n                    this.forceListUpdate();\n                });\n\n                peerMesh.broadcastStream(await this.getMicrophone());\n            },\n            forceListUpdate() {\n                this.listKey++;\n                setTimeout(() => {\n                    let items = document.querySelectorAll('.message-item');\n                    let lastChat = items[items.length - 1];\n                    if (lastChat)\n                        lastChat.scrollIntoView();\n                });\n            },\n            disconnected(peerMesh) {\n                this.$router.replace({});\n                this.peerMesh = null;\n                console.log(\"Disconnected\", peerMesh);\n                this.syncedIdStates = {me: this.syncedState};\n            },\n            send(id, event, value) {\n                if (this.peerMesh && this.peerMesh.peers.hasOwnProperty(id)) {\n                    this.peerMesh.peers[id].send(JSON.stringify({\n                        event: event,\n                        value: value\n                    }))\n                }\n            },\n            broadcast(event, value) {\n                if (this.peerMesh) {\n                    this.peerMesh.broadcast(JSON.stringify({\n                        event: event,\n                        value: value\n                    }))\n                }\n            },\n        },\n        watch: {\n            syncedState: {\n                handler() {\n                    localStorage.userName = this.syncedState.user;\n                    this.forceListUpdate();\n                    this.broadcast('syncedState', this.syncedState);\n                },\n                deep: true\n            }\n        },\n        beforeDestroy() {\n            for (let state in this.privateIdStates)\n                if (this.privateIdStates.hasOwnProperty(state))\n                    cancelAnimationFrame(this.privateIdStates[state].interval);\n        },\n    }\n</script>\n\n<style scoped>\n    .md-app {\n        height: 100vh;\n    }\n\n    .md-drawer {\n        max-width: calc(100% - 125px);\n    }\n\n    .main-content {\n        display: flex;\n        padding: 0px;\n    }\n\n    .chat-box {\n        height: 100%;\n        width: 100%;\n    }\n\n    .messages-list {\n        overflow-y: auto;\n    }\n\n    .message[me] * {\n        text-align: right !important;\n    }\n\n    .home {\n        height: 100%;\n    }\n\n    .chat-box {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        height: 100%;\n    }\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=26aa2fb5&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=26aa2fb5&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26aa2fb5\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Home from './views/Home.vue'\n\nVue.use(Router);\n\nexport default new Router({\n    routes: [\n        {\n            path: '/',\n            name: 'home',\n            component: Home\n        },\n    ]\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport VueMaterial from 'vue-material'\r\nimport 'vue-material/dist/vue-material.min.css'\r\nimport 'vue-material/dist/theme/default.css'\r\nimport 'vue-simple-context-menu/dist/vue-simple-context-menu.css'\r\nimport VueSimpleContextMenu from 'vue-simple-context-menu'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false;\r\n\r\nVue.component('vue-simple-context-menu', VueSimpleContextMenu);\r\nVue.use(VueMaterial);\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=26aa2fb5&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=26aa2fb5&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=1ff30c2b&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ServerBrowser.vue?vue&type=style&index=0&id=1ff30c2b&scoped=true&lang=css&\""],"sourceRoot":""}