{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5b85","webpack:///./src/App.vue?a352","webpack:///./src/js/EmojiSplitter.js","webpack:///./src/js/LabConvert.js","webpack:///./src/js/EmojiMap.js","webpack:///./src/js/EmojiMapManager.js","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/registerServiceWorker.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_0245836e_render","_vm","this","_h","$createElement","_c","_self","attrs","id","_v","staticClass","accept","on","change","$event","loadImage","model","callback","$$v","imageFile","expression","type","emojiWidth","useWebgl","for","emojiPalette","_l","palette","emojis","_s","_e","click","showOptions","grid","directives","rawName","md-mode","staticRenderFns","EmojiSplitter","classCallCheck","HIGH_SURROGATE_START","HIGH_SURROGATE_END","LOW_SURROGATE_START","REGIONAL_INDICATOR_START","REGIONAL_INDICATOR_END","FITZPATRICK_MODIFIER_START","FITZPATRICK_MODIFIER_END","delimiter","Error","Array","isArray","join","RegExp","split","splitIntoChars","increment","takeHowMany","substring","current_pair","next_pair","last_index","current","isFirstOfSurrogatePair","isRegionalIndicatorSymbol","isFitzPatrickModifier","betweenInclusive","charCodeAt","some","code_point","codePointFromSurrogatePair","high_offset","low_offset","lower_bound","upper_bound","js_EmojiSplitter","LabConvert","epsilon","kappa","xyzWhiteReference","X","Y","Z","rgb1","rgb2","deltaEFromLab","rgbToLab","toConsumableArray","lab1","lab2","Math","sqrt","pow","g","b","_this$rgbToXyz","rgbToXyz","_this$rgbToXyz2","slicedToArray","x","y","z","xyzToLab","iR","iG","iB","pivotRgb","iX","iY","iZ","pivotXyz","max","a","js_LabConvert","EmojiMap","renderSize","emojiToColor","createEmojiToColorMap","colorToEmoji","createColorToEmojiMap","Splitter","spliddit","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","emoji","canvas","document","createElement","context","getContext","style","width","height","font","concat","fillStyle","fillText","err","return","map","round","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","clearRect","getImageData","totals","_data$data$slice","_data$data$slice2","color","avg","notRendering","isNonRenderable","console","log","startStyle","colorA","colorB","firstA","getFirstEncounteredColor","firstB","firstEncountered","_data$data$slice3","_data$data$slice4","emojiToColorMap","colorRange","step","bestDelta","Infinity","bestEmoji","deltaE","json","JSON","parse","emojiMap","EmojiMapManager","isCached","createEmojiMap","fromJson","localStorage","e","stringify","getItem","js_EmojiMapManager","Appvue_type_script_lang_js_","components","loading","imageData","spriteCache","timeouts","paletteOptions","mounted","_this","updateScaleFactor","addEventListener","renderView","pixi_es","backgroundColor","renderer","resize","querySelector","appendChild","view","methods","updatePalette","updateEmojiTextureMap","emojiSize","offsetWidth","text","fontSize","fill","updateText","texture","_this2","now","performance","file","files","image","src","URL","createObjectURL","onload","resizeFactor","drawImage","createEmojiGrid","pictureToEmoji","renderEmojiGrid","time","emojiGrid","appWidth","stage","children","removeChild","sprite","addChild","html","outputElement","_y","_x","innerHTML","floor","_imageData$slice","_imageData$slice2","lab","newHeight","output","scaleFactor","transform","watch","_this3","forEach","clearTimeout","setTimeout","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","register","process","ready","registered","cached","updatefound","updated","offline","error","Vue","use","VueMaterial","config","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.8e68204e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/emojipicture/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('md-content',[_c('md-field',[_c('label',[_vm._v(\"Choose image\")]),_c('md-file',{staticClass:\"file-input\",attrs:{\"accept\":\"image/*\"},on:{\"change\":function($event){return _vm.loadImage()}},model:{value:(_vm.imageFile),callback:function ($$v) {_vm.imageFile=$$v},expression:\"imageFile\"}})],1),(_vm.showOptions)?_c('md-list',{staticClass:\"md-double-line md-dense\"},[_c('md-subheader',[_vm._v(\"Options\")]),_c('md-list-item',[_c('md-field',[_c('label',[_vm._v(\"Emoji resolution\")]),_c('md-input',{attrs:{\"type\":\"number\"},model:{value:(_vm.emojiWidth),callback:function ($$v) {_vm.emojiWidth=$$v},expression:\"emojiWidth\"}})],1)],1),_c('md-list-item',[_c('md-switch',{model:{value:(_vm.useWebgl),callback:function ($$v) {_vm.useWebgl=$$v},expression:\"useWebgl\"}},[_vm._v(\"Use WebGL renderer (faster, but no zoom capabilities)\")])],1),_c('md-list-item',[_c('md-field',[_c('label',{attrs:{\"for\":\"palette-select\"}},[_vm._v(\"Quick palette\")]),_c('md-select',{attrs:{\"id\":\"palette-select\"},model:{value:(_vm.emojiPalette),callback:function ($$v) {_vm.emojiPalette=$$v},expression:\"emojiPalette\"}},_vm._l((_vm.paletteOptions),function(palette){return _c('md-option',{attrs:{\"value\":palette.emojis}},[_vm._v(_vm._s(palette.name)+\"\\n                        \")])}),1)],1)],1),_c('md-list-item',[_c('md-field',[_c('label',[_vm._v(\"Palette\")]),_c('md-textarea',{model:{value:(_vm.emojiPalette),callback:function ($$v) {_vm.emojiPalette=$$v},expression:\"emojiPalette\"}})],1)],1)],1):_vm._e(),_c('md-button',{on:{\"click\":function($event){_vm.showOptions=!_vm.showOptions}}},[_vm._v(_vm._s(this.showOptions?\"Hide options\":\"Show options\"))]),_c('br'),(_vm.grid!==null)?_c('md-button',{staticClass:\"md-dense md-raised md-primary\",on:{\"click\":function($event){return _vm.loadImage()}}},[_vm._v(\"Update emoji\\n            picture\\n        \")]):_vm._e(),_c('md-progress-spinner',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loading),expression:\"loading\"}],attrs:{\"md-mode\":\"indeterminate\"}}),_c('pre',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.useWebgl),expression:\"!useWebgl\"}],staticClass:\"output\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.useWebgl),expression:\"useWebgl\"}],staticClass:\"render-output\"}),_c('img',{staticClass:\"preview-image\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class EmojiSplitter{\r\n    constructor(){\r\n        this.HIGH_SURROGATE_START = 0xD800\r\n        this.HIGH_SURROGATE_END = 0xDBFF\r\n        \r\n        this.LOW_SURROGATE_START = 0xDC00\r\n        \r\n        this.REGIONAL_INDICATOR_START = 0x1F1E6\r\n        this.REGIONAL_INDICATOR_END = 0x1F1FF\r\n        \r\n        this.FITZPATRICK_MODIFIER_START = 0x1f3fb\r\n        this.FITZPATRICK_MODIFIER_END = 0x1f3ff\r\n    }\r\n\r\n    spliddit(s, delimiter) {\r\n        if (s === void 0 || s === null) {\r\n            throw new Error('s cannot be undefined or null')\r\n        }\r\n    \r\n        if (Array.isArray(s)) {\r\n            s = s.join('')\r\n        }\r\n    \r\n        if (delimiter instanceof RegExp ||\r\n            (typeof delimiter === 'string' && delimiter.length)\r\n        ) {\r\n            return s.split(delimiter)\r\n        }\r\n    \r\n        return this.splitIntoChars(s)\r\n    }\r\n    \r\n    splitIntoChars(s) {\r\n        let i = 0;\r\n        let increment;\r\n        const result = [];\r\n\r\n        while (i < s.length) {\r\n            increment = this.takeHowMany(i, s)\r\n            result.push(s.substring(i, i + increment))\r\n            i += increment\r\n        }\r\n    \r\n        return result\r\n    }\r\n    \r\n    // Decide how many code units make up the current character.\r\n    // BMP characters: 1 code unit\r\n    // Non-BMP characters (represented by surrogate pairs): 2 code units\r\n    // Emoji with skin-tone modifiers: 4 code units (2 code points)\r\n    // Country flags: 4 code units (2 code points)\r\n    takeHowMany(i, s) {\r\n        const last_index = s.length - 1;\r\n        const current = s[i];\r\n        let current_pair;\r\n        let next_pair;\r\n\r\n        // If we don't have a value that is part of a surrogate pair, or we're at\r\n        // the end, only take the value at i\r\n        if (!this.isFirstOfSurrogatePair(current) || i === last_index) {\r\n            return 1\r\n        }\r\n    \r\n        // If the array isn't long enough to take another pair after this one, we\r\n        // can only take the current pair\r\n        if ((i + 3) > last_index) {\r\n            return 2\r\n        }\r\n    \r\n        current_pair = current + s[i + 1]\r\n        next_pair = s.substring(i + 2, i + 5)\r\n    \r\n        // Country flags are comprised of two regional indicator symbols,\r\n        // each represented by a surrogate pair.\r\n        // See http://emojipedia.org/flags/\r\n        // If both pairs are regional indicator symbols, take 4\r\n        if (this.isRegionalIndicatorSymbol(current_pair) &&\r\n            this.isRegionalIndicatorSymbol(next_pair)) {\r\n            return 4\r\n        }\r\n    \r\n        // If the next pair make a Fitzpatrick skin tone\r\n        // modifier, take 4\r\n        // See http://emojipedia.org/modifiers/\r\n        // Technically, only some code points are meant to be\r\n        // combined with the skin tone modifiers. This function\r\n        // does not check the current pair to see if it is\r\n        // one of them.\r\n        if (this.isFitzPatrickModifier(next_pair)) {\r\n            return 4\r\n        }\r\n    \r\n        return 2\r\n    }\r\n    \r\n    isFirstOfSurrogatePair(c) {\r\n        if (c === void 0 || c === null || !c.hasOwnProperty(0)) {\r\n            return false\r\n        }\r\n    \r\n        return this.betweenInclusive(\r\n            c[0].charCodeAt(0), this.HIGH_SURROGATE_START, this.HIGH_SURROGATE_END\r\n        )\r\n    }\r\n    \r\n    hasPair(s) {\r\n        if (typeof s !== 'string') {\r\n            return false\r\n        }\r\n    \r\n        return s.split('').some(this.isFirstOfSurrogatePair)\r\n    }\r\n    \r\n    isRegionalIndicatorSymbol(s) {\r\n        const code_point = this.codePointFromSurrogatePair(s);\r\n\r\n        return this.betweenInclusive(\r\n            code_point, this.REGIONAL_INDICATOR_START, this.REGIONAL_INDICATOR_END\r\n        )\r\n    }\r\n    \r\n    isFitzPatrickModifier(s) {\r\n        const code_point = this.codePointFromSurrogatePair(s);\r\n\r\n        return this.betweenInclusive(\r\n            code_point, this.FITZPATRICK_MODIFIER_START, this.FITZPATRICK_MODIFIER_END\r\n        )\r\n    }\r\n    \r\n    // Turn two code units (surrogate pair) into\r\n    // the code point they represent.\r\n    codePointFromSurrogatePair(s) {\r\n        const high_offset = s.charCodeAt(0) - this.HIGH_SURROGATE_START;\r\n        const low_offset = s.charCodeAt(1) - this.LOW_SURROGATE_START;\r\n\r\n        return (high_offset << 10) + low_offset + 0x10000\r\n    }\r\n    \r\n    betweenInclusive(value, lower_bound, upper_bound) {\r\n        return value >= lower_bound && value <= upper_bound\r\n    }\r\n}\r\n\r\nexport default new EmojiSplitter();","class LabConvert {\r\n    constructor() {\r\n        this.epsilon = 0.008856;\r\n        this.kappa = 903.3;\r\n        this.xyzWhiteReference = {\r\n            X: 95.047,\r\n            Y: 100.000,\r\n            Z: 108.883\r\n        };\r\n    }\r\n\r\n    deltaE(rgb1, rgb2) {\r\n        return this.deltaEFromLab(this.rgbToLab(...rgb1), this.rgbToLab(...rgb2))\r\n    }\r\n\r\n    deltaEFromLab(lab1, lab2) {\r\n        return Math.sqrt(\r\n            (lab1[0] - lab2[0]) ** 2 +\r\n            (lab1[1] - lab2[1]) ** 2 +\r\n            (lab1[2] - lab2[2]) ** 2\r\n        );\r\n    }\r\n\r\n    rgbToLab(r, g, b) {\r\n        let [x, y, z] = this.rgbToXyz(r, g, b);\r\n\r\n        return this.xyzToLab(x, y, z);\r\n    }\r\n\r\n    rgbToXyz(iR, iG, iB) {\r\n        let r = this.pivotRgb(iR / 255.0);\r\n        let g = this.pivotRgb(iG / 255.0);\r\n        let b = this.pivotRgb(iB / 255.0);\r\n\r\n        // Observer. = 2°, Illuminant = D65\r\n        let x = r * 0.4124 + g * 0.3576 + b * 0.1805;\r\n        let y = r * 0.2126 + g * 0.7152 + b * 0.0722;\r\n        let z = r * 0.0193 + g * 0.1192 + b * 0.9505;\r\n\r\n        return [x, y, z];\r\n    }\r\n\r\n    xyzToLab(iX, iY, iZ) {\r\n        let x = this.pivotXyz(iX / this.xyzWhiteReference.X);\r\n        let y = this.pivotXyz(iY / this.xyzWhiteReference.Y);\r\n        let z = this.pivotXyz(iZ / this.xyzWhiteReference.Z);\r\n\r\n        let l = Math.max(0, 116 * y - 16);\r\n        let a = 500 * (x - y);\r\n        let b = 200 * (y - z);\r\n        return [l, a, b];\r\n    }\r\n\r\n    pivotRgb(n) {\r\n        return (n > 0.04045 ? Math.pow((n + 0.055) / 1.055, 2.4) : n / 12.92) * 100.0;\r\n    }\r\n\r\n    pivotXyz(n) {\r\n        return n > this.epsilon ? n ** (1 / 3) : (this.kappa * n + 16) / 116;\r\n    }\r\n}\r\n\r\nexport default new LabConvert();","import Splitter from '@/js/EmojiSplitter.js';\r\nimport LabConvert from '@/js/LabConvert.js';\r\n\r\nexport default class EmojiMap {\r\n    constructor(emojiPalette) {\r\n        this.renderSize = 10;\r\n\r\n        if (emojiPalette) {\r\n            this.palette = emojiPalette;\r\n            // this.palette = this.filterNonRenderableEmojis(emojiPalette);\r\n            this.emojiToColor = this.createEmojiToColorMap(this.palette);\r\n            this.colorToEmoji = this.createColorToEmojiMap(this.emojiToColor);\r\n        }\r\n    }\r\n\r\n    static fromJson(json) {\r\n        let object = JSON.parse(json);\r\n        let emojiMap = new EmojiMap();\r\n        emojiMap.palette = object.palette;\r\n        emojiMap.emojiToColor = object.emojiToColor;\r\n        emojiMap.colorToEmoji = object.colorToEmoji;\r\n        return emojiMap;\r\n    }\r\n\r\n    filterNonRenderableEmojis(emojiPalette) {\r\n        let result = '';\r\n        let emojis = Splitter.spliddit(emojiPalette);\r\n\r\n        for (let emoji of emojis) {\r\n            let canvas = document.createElement('canvas');\r\n            let context = canvas.getContext('2d');\r\n            canvas.style.width = '200px';\r\n            canvas.style.height = '200px';\r\n            canvas.width = 20;\r\n            canvas.height = 20;\r\n            context.font = `${this.renderSize}px Arial`;\r\n            context.fillStyle = `rgb(23, 129, 238)`;\r\n            context.fillText(emoji, 0, 0);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    createEmojiToColorMap(emojiPalette) {\r\n        let map = {};\r\n        let emojis = Splitter.spliddit(emojiPalette);\r\n        let canvas = document.createElement('canvas');\r\n        let context = canvas.getContext('2d');\r\n        canvas.width = Math.round(this.renderSize * 1.4) - 2;\r\n        canvas.height = Math.round(this.renderSize * 1.4) - 3;\r\n        if (false) {\r\n            canvas.style.width = '200px';\r\n            canvas.style.height = '200px';\r\n            document.body.appendChild(canvas);\r\n            canvas.style.position = 'fixed';\r\n            canvas.style.top = '0';\r\n            canvas.style.left = '0';\r\n        }\r\n        context.font = `${this.renderSize}px Arial`;\r\n        context.fillStyle = 'white';\r\n        for (let emoji of emojis) {\r\n            // let emoji = '🗒';\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            context.fillText(emoji, 0, this.renderSize);\r\n            let data = context.getImageData(0, 0, canvas.width, canvas.height);\r\n            let totals = [0, 0, 0];\r\n            for (let i = 0; i < data.data.length; i += 4) {\r\n                let [r, g, b, a] = data.data.slice(i, i + 4);\r\n                let color = LabConvert.rgbToLab(r, g, b);\r\n\r\n                a /= 255;\r\n                totals[0] += color[0] * a;\r\n                totals[1] += color[1] * a;\r\n                totals[2] += color[2] * a;\r\n            }\r\n            let n = data.data.length / 4;\r\n            let avg = [totals[0] / n, totals[1] / n, totals[2] / n];\r\n\r\n            let notRendering = this.isNonRenderable(emoji, context, canvas);\r\n            if (notRendering) {\r\n                console.log(\"Filtered out\", emoji);\r\n                continue;\r\n            }\r\n\r\n            map[emoji] = avg;\r\n        }\r\n        return map;\r\n    }\r\n\r\n    isNonRenderable(emoji, context, canvas) {\r\n        let startStyle = context.fillStyle;\r\n\r\n        let colorA = [23, 129, 238];\r\n        let colorB = [238, 1, 128];\r\n\r\n        let firstA = this.getFirstEncounteredColor(emoji, colorA, context, canvas);\r\n        let firstB = this.getFirstEncounteredColor(emoji, colorB, context, canvas);\r\n\r\n        context.fillStyle = startStyle;\r\n        return firstA !== firstB;\r\n    }\r\n\r\n    getFirstEncounteredColor(emoji, color, context, canvas) {\r\n        context.fillStyle = `rgb(${color})`;\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.fillText(emoji, 0, this.renderSize);\r\n        let data = context.getImageData(0, 0, canvas.width, canvas.height);\r\n        let firstEncountered = '';\r\n        //If the image color changes when fillStyle changes it's not an emoji\r\n        for (let i = 0; i < data.data.length; i += 4) {\r\n            let [r, g, b, a] = data.data.slice(i, i + 4);\r\n\r\n            a /= 255;\r\n\r\n            if (a > 0.1) {\r\n                firstEncountered = [r, g, b].join(',');\r\n                break;\r\n            }\r\n        }\r\n        return firstEncountered;\r\n    }\r\n\r\n    //Todo nearest neighbour search\r\n    createColorToEmojiMap(emojiToColorMap) {\r\n        const colorRange = 100;\r\n        const step = 4;\r\n\r\n        let map = [];\r\n        for (let l = -colorRange; l <= colorRange; l += step) {\r\n            map[(l + colorRange) / step] = [];\r\n            for (let a = -colorRange; a <= colorRange; a += step) {\r\n                map[(l + colorRange) / step][(a + colorRange) / step] = [];\r\n                for (let b = -colorRange; b <= colorRange; b += step) {\r\n                    let color = [l, a, b];\r\n                    let bestDelta = Infinity;\r\n                    let bestEmoji;\r\n                    for (let emoji in emojiToColorMap) {\r\n                        let deltaE = LabConvert.deltaEFromLab(color, emojiToColorMap[emoji]);\r\n                        if (deltaE < bestDelta) {\r\n                            bestDelta = deltaE;\r\n                            bestEmoji = emoji;\r\n                        }\r\n                    }\r\n                    map[(l + colorRange) / step][(a + colorRange) / step][(b + colorRange) / step] = bestEmoji;\r\n                }\r\n            }\r\n        }\r\n        return {map, step, colorRange};\r\n    }\r\n}","import EmojiMap from '@/js/EmojiMap';\r\n\r\nclass EmojiMapManager {\r\n    emojiMap(palette) {\r\n        if (!this.isCached(palette))\r\n            return this.createEmojiMap(palette);\r\n        try {\r\n            return EmojiMap.fromJson(localStorage[palette]);\r\n        } catch (e) {\r\n            return this.createEmojiMap(palette);\r\n        }\r\n    }\r\n\r\n    createEmojiMap(palette) {\r\n        let emojiMap = new EmojiMap(palette);\r\n        localStorage[palette] = JSON.stringify(emojiMap);\r\n        return emojiMap;\r\n    }\r\n\r\n    isCached(palette){\r\n        return localStorage.getItem(palette) !== null;\r\n    }\r\n}\r\n\r\nexport default new EmojiMapManager();","<!--Todo:-->\r\n<!--Export EmojiPicture-->\r\n<!--Emoji Camera-->\r\n\r\n<template>\r\n    <div id=\"app\">\r\n        <md-content>\r\n            <md-field>\r\n                <label>Choose image</label>\r\n                <md-file v-model=\"imageFile\" accept=\"image/*\" class=\"file-input\" @change=\"loadImage()\"/>\r\n            </md-field>\r\n\r\n            <md-list v-if=\"showOptions\" class=\"md-double-line md-dense\">\r\n                <md-subheader>Options</md-subheader>\r\n\r\n                <md-list-item>\r\n                    <md-field>\r\n                        <label>Emoji resolution</label>\r\n                        <md-input v-model=\"emojiWidth\" type=\"number\"></md-input>\r\n                    </md-field>\r\n                </md-list-item>\r\n\r\n                <md-list-item>\r\n                    <md-switch v-model=\"useWebgl\">Use WebGL renderer (faster, but no zoom capabilities)</md-switch>\r\n                </md-list-item>\r\n\r\n                <md-list-item>\r\n                    <md-field>\r\n                        <label for=\"palette-select\">Quick palette</label>\r\n                        <md-select id=\"palette-select\" v-model=\"emojiPalette\">\r\n                            <md-option v-for=\"palette in paletteOptions\" :value=\"palette.emojis\">{{palette.name}}\r\n                            </md-option>\r\n                        </md-select>\r\n                    </md-field>\r\n                </md-list-item>\r\n                <md-list-item>\r\n                    <md-field>\r\n                        <label>Palette</label>\r\n                        <md-textarea v-model=\"emojiPalette\"></md-textarea>\r\n                    </md-field>\r\n                </md-list-item>\r\n                <!--<md-list-item>-->\r\n                <!--<md-button class=\"md-dense md-raised\" @click=\"updatePalette()\">Update palette</md-button>-->\r\n                <!--</md-list-item>-->\r\n            </md-list>\r\n\r\n            <md-button @click=\"showOptions=!showOptions\">{{this.showOptions?\"Hide options\":\"Show options\"}}</md-button>\r\n\r\n            <br>\r\n\r\n            <md-button v-if=\"grid!==null\" class=\"md-dense md-raised md-primary\" @click=\"loadImage()\">Update emoji\r\n                picture\r\n            </md-button>\r\n            <md-progress-spinner v-show=\"loading\" md-mode=\"indeterminate\"></md-progress-spinner>\r\n            <pre v-show=\"!useWebgl\" class=\"output\"></pre>\r\n            <div v-show=\"useWebgl\" class=\"render-output\"></div>\r\n            <img class=\"preview-image\">\r\n        </md-content>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import EmojiMapManager from '@/js/EmojiMapManager';\r\n    import LabConvert from '@/js/LabConvert';\r\n    import * as PIXI from 'pixi.js';\r\n    import EmojiSplitter from \"./js/EmojiSplitter\";\r\n    // import EmojiSplitter from \"@/js/EmojiSplitter\";\r\n    // import EmojiMap from \"@/js/EmojiMap\";\r\n\r\n    // let a = new EmojiMap('🏴🏁🚩🏳️‍🌈🇦🇫🇦🇽🇦🇱🇩🇿👌👌🏻');\r\n    // console.log(a);\r\n\r\n    export default {\r\n        name: 'app',\r\n        components: {},\r\n        data() {\r\n            return {\r\n                useWebgl: false,\r\n                showOptions: false,\r\n                loading: false,\r\n                imageFile: null,\r\n                emojiMap: null,\r\n                grid: null,\r\n                imageData: null,\r\n                emojiWidth: 100,\r\n                spriteCache: {},\r\n                timeouts: [],\r\n                paletteOptions: [\r\n                    {\r\n                        name: 'Default',\r\n                        emojis: `😂💯🙈😡😍😱👌👌🏻👌🏼👌🏽👌🏾👌🏿🤡😈🤢👹👾🤖👻💩💍💋👅👄👥👀🎒👛👘👒👗👔👖👚👠🐾🌴🍃🌏🌓🌝🍏🍎🍋🥝🍳🥚🍖🏀⚾🎾🏐🏉👣💛💚💙💜🖤`\r\n                    },\r\n                    {\r\n                        name: 'Flags',\r\n                        emojis: '🏳️🏴🏁🚩🏳️‍🌈🇦🇫🇦🇽🇦🇱🇩🇿🇦🇸🇦🇩🇦🇴🇦🇮🇦🇶🇦🇬🇦🇷🇦🇲🇦🇼🇦🇺🇦🇹🇦🇿🇧🇸🇧🇭🇧🇩🇧🇧🇧🇾🇧🇪🇧🇿🇧🇯🇧🇲🇧🇹🇧🇴🇧🇦🇧🇼🇧🇷🇮🇴🇻🇬🇧🇳🇧🇬🇧🇫🇧🇮🇰🇭🇨🇲🇨🇦🇮🇨🇨🇻🇧🇶🇰🇾🇨🇫🇹🇩🇨🇱🇨🇳🇨🇽🇨🇨🇨🇴🇰🇲🇨🇬🇨🇩🇨🇰🇨🇷🇨🇮🇭🇷🇨🇺🇨🇼🇨🇾🇨🇿🇩🇰🇩🇯🇩🇲🇩🇴🇪🇨🇪🇬🇸🇻🇬🇶🇪🇷🇪🇪🇪🇹🇪🇺🇫🇰🇫🇴🇫🇯🇫🇮🇫🇷🇬🇫🇵🇫🇹🇫🇬🇦🇬🇲🇬🇪🇩🇪🇬🇭🇬🇮🇬🇷🇬🇱🇬🇩🇬🇵🇬🇺🇬🇹🇬🇬🇬🇳🇬🇼🇬🇾🇭🇹🇭🇳🇭🇰🇭🇺🇮🇸🇮🇳🇮🇩🇮🇷🇮🇶🇮🇪🇮🇲🇮🇱🇮🇹🇯🇲🇯🇵🎌🇯🇪🇯🇴🇰🇿🇰🇪🇰🇮🇽🇰🇰🇼🇰🇬🇱🇦🇱🇻🇱🇧🇱🇸🇱🇷🇱🇾🇱🇮🇱🇹🇱🇺🇲🇴🇲🇰🇲🇬🇲🇼🇲🇾🇲🇻🇲🇱🇲🇹🇲🇭🇲🇶🇲🇷🇲🇺🇾🇹🇲🇽🇫🇲🇲🇩🇲🇨🇲🇳🇲🇪🇲🇸🇲🇦🇲🇿🇲🇲🇳🇦🇳🇷🇳🇵🇳🇱🇳🇨🇳🇿🇳🇮🇳🇪🇳🇬🇳🇺🇳🇫🇰🇵🇲🇵🇳🇴🇴🇲🇵🇰🇵🇼🇵🇸🇵🇦🇵🇬🇵🇾🇵🇪🇵🇭🇵🇳🇵🇱🇵🇹🇵🇷🇶🇦🇷🇪🇷🇴🇷🇺🇷🇼🇼🇸🇸🇲🇸🇦🇸🇳🇷🇸🇸🇨🇸🇱🇸🇬🇸🇽🇸🇰🇸🇮🇬🇸🇸🇧🇸🇴🇿🇦🇰🇷🇸🇸🇪🇸🇱🇰🇧🇱🇸🇭🇰🇳🇱🇨🇵🇲🇻🇨🇸🇩🇸🇷🇸🇿🇸🇪🇨🇭🇸🇾🇹🇼🇹🇯🇹🇿🇹🇭🇹🇱🇹🇬🇹🇰🇹🇴🇹🇹🇹🇳🇹🇷🇹🇲🇹🇨🇹🇻🇻🇮🇺🇬🇺🇦🇦🇪🇬🇧🇺🇸🇺🇾🇺🇿🇻🇺🇻🇦🇻🇪🇻🇳🇼🇫🇪🇭🇾🇪🇿🇲🇿🇼'\r\n                    },\r\n                    {name: 'Sepia', emojis: `👌👌🏻👌🏼👌🏽👌🏾👌`},\r\n                    {\r\n                        name: 'Travel',\r\n                        emojis: `🚗🚕🚙🚌🚎🏎🚓🚑🚒🚐🚚🚛🚜🛴🚲🛵🏍🚨🚔🚍🚘🚖🚡🚠🚟🚃🚋🚞🚝🚄🚅🚈🚂🚆🚇🚊🚉🚁🛩✈️🛫🛬🚀🛰💺🛶⛵️🛥🚤🛳⛴🚢⚓️🚧⛽️🚏🚦🚥🗺🗿🗽⛲️🗼🏰🏯🏟🎡🎢🎠⛱🏖🏝⛰🏔🗻🌋🏜🏕⛺️🛤🛣🏗🏭🏠🏡🏘🏚🏢🏬🏣🏤🏥🏦🏨🏪🏫🏩💒🏛⛪️🕌🕍🕋⛩🗾🎑🏞🌅🌄🌠🎇🎆🌇🌆🏙🌃🌌🌉🌁`\r\n                    },\r\n                    {\r\n                        name: 'All (very slow)',\r\n                        emojis: `😀😁😂🤣😃😄😅😆😉😊😋😎😍😘😗😙😚☺️🙂🤗🤩🤔🤨😐😑😶🙄😏😣😥😮🤐😯😪😫😴😌😛😜😝🤤😒😓😔😕🙃🤑😲☹️🙁😖😞😟😤😢😭😦😧😨😩🤯😬😰😱😳🤪😵😡😠🤬😷🤒🤕🤢🤮🤧😇🤠🤡🤥🤫🤭🧐🤓😈👿👹👺💀👻👽🤖💩😺😸😹😻😼😽🙀😿😾👶👦👧👨👩👴👵👨‍⚕️👩‍⚕️👨‍🎓👩‍🎓👨‍⚖️👩‍⚖️👨‍🌾👩‍🌾👨‍🍳👩‍🍳👨‍🔧👩‍🔧👨‍🏭👩‍🏭👨‍💼👩‍💼👨‍🔬👩‍🔬👨‍💻👩‍💻👨‍🎤👩‍🎤👨‍🎨👩‍🎨👨‍✈️👩‍✈️👨‍🚀👩‍🚀👨‍🚒👩‍🚒👮👮‍♂️👮‍♀️🕵🕵️‍♂️🕵️‍♀️💂💂‍♂️💂‍♀️👷👷‍♂️👷‍♀️🤴👸👳👳‍♂️👳‍♀️👲🧕🧔👱👱‍♂️👱‍♀️🤵👰🤰🤱👼🎅🤶🧙‍♀️🧙‍♂️🧚‍♀️🧚‍♂️🧛‍♀️🧛‍♂️🧜‍♀️🧜‍♂️🧝‍♀️🧝‍♂️🧞‍♀️🧞‍♂️🧟‍♀️🧟‍♂️🙍🙍‍♂️🙍‍♀️🙎🙎‍♂️🙎‍♀️🙅🙅‍♂️🙅‍♀️🙆🙆‍♂️🙆‍♀️💁💁‍♂️💁‍♀️🙋🙋‍♂️🙋‍♀️🙇🙇‍♂️🙇‍♀️🤦🤦‍♂️🤦‍♀️🤷🤷‍♂️🤷‍♀️💆💆‍♂️💆‍♀️💇💇‍♂️💇‍♀️🚶🚶‍♂️🚶‍♀️🏃🏃‍♂️🏃‍♀️💃🕺👯👯‍♂️👯‍♀️🧖‍♀️🧖‍♂️🕴🗣👤👥👫👬👭💏👨‍❤️‍💋‍👨👩‍❤️‍💋‍👩💑👨‍❤️‍👨👩‍❤️‍👩👪👨‍👩‍👦👨‍👩‍👧👨‍👩‍👧‍👦👨‍👩‍👦‍👦👨‍👩‍👧‍👧👨‍👨‍👦👨‍👨‍👧👨‍👨‍👧‍👦👨‍👨‍👦‍👦👨‍👨‍👧‍👧👩‍👩‍👦👩‍👩‍👧👩‍👩‍👧‍👦👩‍👩‍👦‍👦👩‍👩‍👧‍👧👨‍👦👨‍👦‍👦👨‍👧👨‍👧‍👦👨‍👧‍👧👩‍👦👩‍👦‍👦👩‍👧👩‍👧‍👦👩‍👧‍👧🤳💪👈👉☝️👆🖕👇✌️🤞🖖🤘🖐✋👌👍👎✊👊🤛🤜🤚👋🤟✍️👏👐🙌🤲🙏🤝💅👂👃👣👀👁🧠👅👄💋👓🕶👔👕👖🧣🧤🧥🧦👗👘👙👚👛👜👝🎒👞👟👠👡👢👑👒🎩🎓🧢⛑💄💍🌂💼👐🏻🙌🏻👏🏻🙏🏻👍🏻👎🏻👊🏻✊🏻🤛🏻🤜🏻🤞🏻✌🏻🤘🏻👌🏻👈🏻👉🏻👆🏻👇🏻☝🏻✋🏻🤚🏻🖐🏻🖖🏻👋🏻🤙🏻💪🏻🖕🏻✍🏻🤳🏻💅🏻👂🏻👃🏻👶🏻👦🏻👧🏻👨🏻👩🏻👱🏻‍♀️👱🏻👴🏻👵🏻👲🏻👳🏻‍♀️👳🏻👮🏻‍♀️👮🏻👷🏻‍♀️👷🏻💂🏻‍♀️💂🏻🕵🏻‍♀️🕵🏻👩🏻‍⚕️👨🏻‍⚕️👩🏻‍🌾👨🏻‍🌾👩🏻‍🍳👨🏻‍🍳👩🏻‍🎓👨🏻‍🎓👩🏻‍🎤👨🏻‍🎤👩🏻‍🏫👨🏻‍🏫👩🏻‍🏭👨🏻‍🏭👩🏻‍💻👨🏻‍💻👩🏻‍💼👨🏻‍💼👩🏻‍🔧👨🏻‍🔧👩🏻‍🔬👨🏻‍🔬👩🏻‍🎨👨🏻‍🎨👩🏻‍🚒👨🏻‍🚒👩🏻‍✈️👨🏻‍✈️👩🏻‍🚀👨🏻‍🚀👩🏻‍⚖️👨🏻‍⚖️🤶🏻🎅🏻👸🏻🤴🏻👰🏻🤵🏻👼🏻🤰🏻🙇🏻‍♀️🙇🏻💁🏻💁🏻‍♂️🙅🏻🙅🏻‍♂️🙆🏻🙆🏻‍♂️🙋🏻🙋🏻‍♂️🤦🏻‍♀️🤦🏻‍♂️🤷🏻‍♀️🤷🏻‍♂️🙎🏻🙎🏻‍♂️🙍🏻🙍🏻‍♂️💇🏻💇🏻‍♂️💆🏻💆🏻‍♂️🕴🏻💃🏻🕺🏻🚶🏻‍♀️🚶🏻🏃🏻‍♀️🏃🏻🏋🏻‍♀️🏋🏻🤸🏻‍♀️🤸🏻‍♂️⛹🏻‍♀️⛹🏻🤾🏻‍♀️🤾🏻‍♂️🏌🏻‍♀️🏌🏻🏄🏻‍♀️🏄🏻🏊🏻‍♀️🏊🏻🤽🏻‍♀️🤽🏻‍♂️🚣🏻‍♀️🚣🏻🏇🏻🚴🏻‍♀️🚴🏻🚵🏻‍♀️🚵🏻🤹🏻‍♀️🤹🏻‍♂️🛀🏻👐🏼🙌🏼👏🏼🙏🏼👍🏼👎🏼👊🏼✊🏼🤛🏼🤜🏼🤞🏼✌🏼🤘🏼👌🏼👈🏼👉🏼👆🏼👇🏼☝🏼✋🏼🤚🏼🖐🏼🖖🏼👋🏼🤙🏼💪🏼🖕🏼✍🏼🤳🏼💅🏼👂🏼👃🏼👶🏼👦🏼👧🏼👨🏼👩🏼👱🏼‍♀️👱🏼👴🏼👵🏼👲🏼👳🏼‍♀️👳🏼👮🏼‍♀️👮🏼👷🏼‍♀️👷🏼💂🏼‍♀️💂🏼🕵🏼‍♀️🕵🏼👩🏼‍⚕️👨🏼‍⚕️👩🏼‍🌾👨🏼‍🌾👩🏼‍🍳👨🏼‍🍳👩🏼‍🎓👨🏼‍🎓👩🏼‍🎤👨🏼‍🎤👩🏼‍🏫👨🏼‍🏫👩🏼‍🏭👨🏼‍🏭👩🏼‍💻👨🏼‍💻👩🏼‍💼👨🏼‍💼👩🏼‍🔧👨🏼‍🔧👩🏼‍🔬👨🏼‍🔬👩🏼‍🎨👨🏼‍🎨👩🏼‍🚒👨🏼‍🚒👩🏼‍✈️👨🏼‍✈️👩🏼‍🚀👨🏼‍🚀👩🏼‍⚖️👨🏼‍⚖️🤶🏼🎅🏼👸🏼🤴🏼👰🏼🤵🏼👼🏼🤰🏼🙇🏼‍♀️🙇🏼💁🏼💁🏼‍♂️🙅🏼🙅🏼‍♂️🙆🏼🙆🏼‍♂️🙋🏼🙋🏼‍♂️🤦🏼‍♀️🤦🏼‍♂️🤷🏼‍♀️🤷🏼‍♂️🙎🏼🙎🏼‍♂️🙍🏼🙍🏼‍♂️💇🏼💇🏼‍♂️💆🏼💆🏼‍♂️🕴🏼💃🏼🕺🏼🚶🏼‍♀️🚶🏼🏃🏼‍♀️🏃🏼🏋🏼‍♀️🏋🏼🤸🏼‍♀️🤸🏼‍♂️⛹🏼‍♀️⛹🏼🤾🏼‍♀️🤾🏼‍♂️🏌🏼‍♀️🏌🏼🏄🏼‍♀️🏄🏼🏊🏼‍♀️🏊🏼🤽🏼‍♀️🤽🏼‍♂️🚣🏼‍♀️🚣🏼🏇🏼🚴🏼‍♀️🚴🏼🚵🏼‍♀️🚵🏻🤹🏼‍♀️🤹🏼‍♂️🛀🏼👐🏽🙌🏽👏🏽🙏🏽👍🏽👎🏽👊🏽✊🏽🤛🏽🤜🏽🤞🏽✌🏽🤘🏽👌🏽👈🏽👉🏽👆🏽👇🏽☝🏽✋🏽🤚🏽🖐🏽🖖🏽👋🏽🤙🏽💪🏽🖕🏽✍🏽🤳🏽💅🏽👂🏽👃🏽👶🏽👦🏽👧🏽👨🏽👩🏽👱🏽‍♀️👱🏽👴🏽👵🏽👲🏽👳🏽‍♀️👳🏽👮🏽‍♀️👮🏽👷🏽‍♀️👷🏽💂🏽‍♀️💂🏽🕵🏽‍♀️🕵🏽👩🏽‍⚕️👨🏽‍⚕️👩🏽‍🌾👨🏽‍🌾👩🏽‍🍳👨🏽‍🍳👩🏽‍🎓👨🏽‍🎓👩🏽‍🎤👨🏽‍🎤👩🏽‍🏫👨🏽‍🏫👩🏽‍🏭👨🏽‍🏭👩🏽‍💻👨🏽‍💻👩🏽‍💼👨🏽‍💼👩🏽‍🔧👨🏽‍🔧👩🏽‍🔬👨🏽‍🔬👩🏽‍🎨👨🏽‍🎨👩🏽‍🚒👨🏽‍🚒👩🏽‍✈️👨🏽‍✈️👩🏽‍🚀👨🏽‍🚀👩🏽‍⚖️👨🏽‍⚖️🤶🏽🎅🏽👸🏽🤴🏽👰🏽🤵🏽👼🏽🤰🏽🙇🏽‍♀️🙇🏽💁🏽💁🏽‍♂️🙅🏽🙅🏽‍♂️🙆🏽🙆🏽‍♂️🙋🏽🙋🏽‍♂️🤦🏽‍♀️🤦🏽‍♂️🤷🏽‍♀️🤷🏽‍♂️🙎🏽🙎🏽‍♂️🙍🏽🙍🏽‍♂️💇🏽💇🏽‍♂️💆🏽💆🏽‍♂️🕴🏼💃🏽🕺🏽🚶🏽‍♀️🚶🏽🏃🏽‍♀️🏃🏽🏋🏽‍♀️🏋🏽🤸🏽‍♀️🤸🏽‍♂️⛹🏽‍♀️⛹🏽🤾🏽‍♀️🤾🏽‍♂️🏌🏽‍♀️🏌🏽🏄🏽‍♀️🏄🏽🏊🏽‍♀️🏊🏽🤽🏽‍♀️🤽🏽‍♂️🚣🏽‍♀️🚣🏽🏇🏽🚴🏽‍♀️🚴🏽🚵🏽‍♀️🚵🏽🤹🏽‍♀️🤹🏽‍♂️🛀🏽👐🏾🙌🏾👏🏾🙏🏾👍🏾👎🏾👊🏾✊🏾🤛🏾🤜🏾🤞🏾✌🏾🤘🏾👌🏾👈🏾👉🏾👆🏾👇🏾☝🏾✋🏾🤚🏾🖐🏾🖖🏾👋🏾🤙🏾💪🏾🖕🏾✍🏾🤳🏾💅🏾👂🏾👃🏾👶🏾👦🏾👧🏾👨🏾👩🏾👱🏾‍♀️👱🏾👴🏾👵🏾👲🏾👳🏾‍♀️👳🏾👮🏾‍♀️👮🏾👷🏾‍♀️👷🏾💂🏾‍♀️💂🏾🕵🏾‍♀️🕵🏾👩🏾‍⚕️👨🏾‍⚕️👩🏾‍🌾👨🏾‍🌾👩🏾‍🍳👨🏾‍🍳👩🏾‍🎓👨🏾‍🎓👩🏾‍🎤👨🏾‍🎤👩🏾‍🏫👨🏾‍🏫👩🏾‍🏭👨🏾‍🏭👩🏾‍💻👨🏾‍💻👩🏾‍💼👨🏾‍💼👩🏾‍🔧👨🏾‍🔧👩🏾‍🔬👨🏾‍🔬👩🏾‍🎨👨🏾‍🎨👩🏾‍🚒👨🏾‍🚒👩🏾‍✈️👨🏾‍✈️👩🏾‍🚀👨🏾‍🚀👩🏾‍⚖️👨🏾‍⚖️🤶🏾🎅🏾👸🏾🤴🏾👰🏾🤵🏾👼🏾🤰🏾🙇🏾‍♀️🙇🏾💁🏾💁🏾‍♂️🙅🏾🙅🏾‍♂️🙆🏾🙆🏾‍♂️🙋🏾🙋🏾‍♂️🤦🏾‍♀️🤦🏾‍♂️🤷🏾‍♀️🤷🏾‍♂️🙎🏾🙎🏾‍♂️🙍🏾🙍🏾‍♂️💇🏾💇🏾‍♂️💆🏾💆🏾‍♂️🕴🏾💃🏾🕺🏾🚶🏾‍♀️🚶🏾🏃🏾‍♀️🏃🏾🏋🏾‍♀️🏋🏾🤸🏾‍♀️🤸🏾‍♂️⛹🏾‍♀️⛹🏾🤾🏾‍♀️🤾🏾‍♂️🏌🏾‍♀️🏌🏾🏄🏾‍♀️🏄🏾🏊🏾‍♀️🏊🏾🤽🏾‍♀️🤽🏾‍♂️🚣🏾‍♀️🚣🏾🏇🏾🚴🏾‍♀️🚴🏾🚵🏾‍♀️🚵🏾🤹🏾‍♀️🤹🏾‍♂️🛀🏾👐🏿🙌🏿👏🏿🙏🏿👍🏿👎🏿👊🏿✊🏿🤛🏿🤜🏿🤞🏿✌🏿🤘🏿👌🏿👈🏿👉🏿👆🏿👇🏿☝🏿✋🏿🤚🏿🖐🏿🖖🏿👋🏿🤙🏿💪🏿🖕🏿✍🏿🤳🏿💅🏿👂🏿👃🏿👶🏿👦🏿👧🏿👨🏿👩🏿👱🏿‍♀️👱🏿👴🏿👵🏿👲🏿👳🏿‍♀️👳🏿👮🏿‍♀️👮🏿👷🏿‍♀️👷🏿💂🏿‍♀️💂🏿🕵🏿‍♀️🕵🏿👩🏿‍⚕️👨🏿‍⚕️👩🏿‍🌾👨🏿‍🌾👩🏿‍🍳👨🏿‍🍳👩🏿‍🎓👨🏿‍🎓👩🏿‍🎤👨🏿‍🎤👩🏿‍🏫👨🏿‍🏫👩🏿‍🏭👨🏿‍🏭👩🏿‍💻👨🏿‍💻👩🏿‍💼👨🏿‍💼👩🏿‍🔧👨🏿‍🔧👩🏿‍🔬👨🏿‍🔬👩🏿‍🎨👨🏿‍🎨👩🏿‍🚒👨🏿‍🚒👩🏿‍✈️👨🏿‍✈️👩🏿‍🚀👨🏿‍🚀👩🏿‍⚖️👨🏿‍⚖️🤶🏿🎅🏿👸🏿🤴🏿👰🏿🤵🏿👼🏿🤰🏿🙇🏿‍♀️🙇🏿💁🏿💁🏿‍♂️🙅🏿🙅🏿‍♂️🙆🏿🙆🏿‍♂️🙋🏿🙋🏿‍♂️🤦🏿‍♀️🤦🏿‍♂️🤷🏿‍♀️🤷🏿‍♂️🙎🏿🙎🏿‍♂️🙍🏿🙍🏿‍♂️💇🏿💇🏿‍♂️💆🏿💆🏿‍♂️🕴🏿💃🏿🕺🏿🚶🏿‍♀️🚶🏿🏃🏿‍♀️🏃🏿🏋🏿‍♀️🏋🏿🤸🏿‍♀️🤸🏿‍♂️⛹🏿‍♀️⛹🏿🤾🏿‍♀️🤾🏿‍♂️🏌🏿‍♀️🏌🏿🏄🏿‍♀️🏄🏿🏊🏿‍♀️🏊🏿🤽🏿‍♀️🤽🏿‍♂️🚣🏿‍♀️🚣🏿🏇🏿🚴🏿‍♀️🚴🏿🚵🏿‍♀️🚵🏿🤹🏿‍♀️🤹🏿‍♂️🛀🏿🐶🐱🐭🐹🐰🦊🐻🐼🐨🐯🦁🐮🐷🐽🐸🐵🙊🙉🙊🐒🐔🐧🐦🐤🐣🐥🦆🦅🦉🦇🐺🐗🐴🦄🐝🐛🦋🐌🐚🐞🐜🕷🕸🐢🐍🦎🦂🦀🦑🐙🦐🐠🐟🐡🐬🦈🐳🐋🐊🐆🐅🐃🐂🐄🦌🐪🐫🐘🦏🦍🐎🐖🐐🐏🐑🐕🐩🐈🐓🦃🕊🐇🐁🐀🐿🐾🐉🐲🌵🎄🌲🌳🌴🌱🌿☘️🍀🎍🎋🍃🍂🍁🍄🌾💐🌷🌹🥀🌻🌼🌸🌺🌎🌍🌏🌕🌖🌗🌘🌑🌒🌓🌔🌚🌝🌞🌛🌜🌙💫⭐️🌟✨⚡️🔥💥☄️☀️🌤⛅️🌥🌦🌈☁️🌧⛈🌩🌨☃️⛄️❄️🌬💨🌪🌫🌊💧💦☔️🍏🍎🍐🍊🍋🍌🍉🍇🍓🍈🍒🍑🍍🥝🥑🍅🍆🥒🥕🌽🌶🥔🍠🌰🥜🍯🥐🍞🥖🧀🥚🍳🥓🥞🍤🍗🍖🍕🌭🍔🍟🥙🌮🌯🥗🥘🍝🍜🍲🍥🍣🍱🍛🍚🍙🍘🍢🍡🍧🍨🍦🍰🎂🍮🍭🍬🍫🍿🍩🍪🥛🍼☕️🍵🍶🍺🍻🥂🍷🥃🍸🍹🍾🥄🍴🍽⚽️🏀🏈⚾️🎾🏐🏉🎱🏓🏸🥅🏒🏑🏏⛳️🏹🎣🥊🥋⛸🎿⛷🏂🏋️‍♀️🏋️🤺🤼‍♀️🤼‍♂️🤸‍♀️🤸‍♂️⛹️‍♀️⛹️🤾‍♀️🤾‍♂️🏌️‍♀️🏌️🏄‍♀️🏄🏊‍♀️🏊🤽‍♀️🤽‍♂️🚣‍♀️🚣🏇🚴‍♀️🚴🚵‍♀️🚵🎽🏅🎖🥇🥈🥉🏆🏵🎗🎫🎟🎪🤹‍♀️🤹‍♂️🎭🎨🎬🎤🎧🎼🎹🥁🎷🎺🎸🎻🎲🎯🎳🎮🎰🚗🚕🚙🚌🚎🏎🚓🚑🚒🚐🚚🚛🚜🛴🚲🛵🏍🚨🚔🚍🚘🚖🚡🚠🚟🚃🚋🚞🚝🚄🚅🚈🚂🚆🚇🚊🚉🚁🛩✈️🛫🛬🚀🛰💺🛶⛵️🛥🚤🛳⛴🚢⚓️🚧⛽️🚏🚦🚥🗺🗿🗽⛲️🗼🏰🏯🏟🎡🎢🎠⛱🏖🏝⛰🏔🗻🌋🏜🏕⛺️🛤🛣🏗🏭🏠🏡🏘🏚🏢🏬🏣🏤🏥🏦🏨🏪🏫🏩💒🏛⛪️🕌🕍🕋⛩🗾🎑🏞🌅🌄🌠🎇🎆🌇🌆🏙🌃🌌🌉🌁⌚️📱📲💻⌨️🖥🖨🖱🖲🕹🗜💽💾💿📀📼📷📸📹🎥📽🎞📞☎️📟📠📺📻🎙🎚🎛⏱⏲⏰🕰⌛️⏳📡🔋🔌💡🔦🕯🗑🛢💸💵💴💶💷💰💳💎⚖️🔧🔨⚒🛠⛏🔩⚙️⛓🔫💣🔪🗡⚔️🛡🚬⚰️⚱️🏺🔮📿💈⚗️🔭🔬🕳💊💉🌡🚽🚰🚿🛁🛀🛎🔑🗝🚪🛋🛏🛌🖼🛍🛒🎁🎈🎏🎀🎊🎉🎎🏮🎐✉️📩📨📧💌📥📤📦🏷📪📫📬📭📮📯📜📃📄📑📊📈📉🗒🗓📆📅📇🗃🗳🗄📋📁📂🗂🗞📰📓📔📒📕📗📘📙📚📖🔖🔗📎🖇📐📏📌📍📌🎌🏳️🏴🏁🏳️‍🌈✂️🖊🖋✒️🖌🖍📝✏️🔍🔎🔏🔐🔒🔓❤️💛💚💙💜🖤💔❣️💕💞💓💗💖💘💝💟☮️✝️☪️🕉☸️✡️🔯🕎☯️☦️🛐⛎♈️♉️♊️♋️♌️♍️♎️♏️♐️♑️♒️♓️🆔⚛️🉑☢️☣️📴📳🈶🈚️🈸🈺🈷️✴️🆚💮🉐㊙️㊗️🈴🈵🈹🈲🅰️🅱️🆎🆑🅾️🆘❌⭕️🛑⛔️📛🚫💯💢♨️🚷🚯🚳🚱🔞📵🚭❗️❕❓❔‼️⁉️🔅🔆〽️⚠️🚸🔱⚜️🔰♻️✅🈯️💹❇️✳️❎🌐💠Ⓜ️🌀💤🏧🚾♿️🅿️🈳🈂️🛂🛃🛄🛅🚹🚺🚼🚻🚮🎦📶🈁🔣ℹ️🔤🔡🔠🆖🆗🆙🆒🆕🆓0️⃣1️⃣2️⃣3️⃣4️⃣5️⃣6️⃣7️⃣8️⃣9️⃣🔟🔢#️⃣*️⃣▶️⏸⏯⏹⏺⏭⏮⏩⏪⏫⏬◀️🔼🔽➡️⬅️⬆️⬇️↗️↘️↙️↖️↕️↔️↪️↩️⤴️⤵️🔀🔁🔂🔄🔃🎵🎶➕➖➗✖️💲💱™️©️®️〰️➰➿🔚🔙🔛🔝✔️☑️🔘⚪️⚫️🔴🔵🔺🔻🔸🔹🔶🔷🔳🔲▪️▫️◾️◽️◼️◻️⬛️⬜️🔈🔇🔉🔊🔔🔕📣📢👁‍🗨💬💭🗯♠️♣️♥️♦️🃏🎴🀄️🕐🕑🕒🕓🕔🕕🕖🕗🕘🕙🕚🕛🕜🕝🕞🕟🕠🕡🕢🕣🕤🕥🕦🕧🏳️🏴🏁🚩🏳️‍🌈🇦🇫🇦🇽🇦🇱🇩🇿🇦🇸🇦🇩🇦🇴🇦🇮🇦🇶🇦🇬🇦🇷🇦🇲🇦🇼🇦🇺🇦🇹🇦🇿🇧🇸🇧🇭🇧🇩🇧🇧🇧🇾🇧🇪🇧🇿🇧🇯🇧🇲🇧🇹🇧🇴🇧🇦🇧🇼🇧🇷🇮🇴🇻🇬🇧🇳🇧🇬🇧🇫🇧🇮🇰🇭🇨🇲🇨🇦🇮🇨🇨🇻🇧🇶🇰🇾🇨🇫🇹🇩🇨🇱🇨🇳🇨🇽🇨🇨🇨🇴🇰🇲🇨🇬🇨🇩🇨🇰🇨🇷🇨🇮🇭🇷🇨🇺🇨🇼🇨🇾🇨🇿🇩🇰🇩🇯🇩🇲🇩🇴🇪🇨🇪🇬🇸🇻🇬🇶🇪🇷🇪🇪🇪🇹🇪🇺🇫🇰🇫🇴🇫🇯🇫🇮🇫🇷🇬🇫🇵🇫🇹🇫🇬🇦🇬🇲🇬🇪🇩🇪🇬🇭🇬🇮🇬🇷🇬🇱🇬🇩🇬🇵🇬🇺🇬🇹🇬🇬🇬🇳🇬🇼🇬🇾🇭🇹🇭🇳🇭🇰🇭🇺🇮🇸🇮🇳🇮🇩🇮🇷🇮🇶🇮🇪🇮🇲🇮🇱🇮🇹🇯🇲🇯🇵🎌🇯🇪🇯🇴🇰🇿🇰🇪🇰🇮🇽🇰🇰🇼🇰🇬🇱🇦🇱🇻🇱🇧🇱🇸🇱🇷🇱🇾🇱🇮🇱🇹🇱🇺🇲🇴🇲🇰🇲🇬🇲🇼🇲🇾🇲🇻🇲🇱🇲🇹🇲🇭🇲🇶🇲🇷🇲🇺🇾🇹🇲🇽🇫🇲🇲🇩🇲🇨🇲🇳🇲🇪🇲🇸🇲🇦🇲🇿🇲🇲🇳🇦🇳🇷🇳🇵🇳🇱🇳🇨🇳🇿🇳🇮🇳🇪🇳🇬🇳🇺🇳🇫🇰🇵🇲🇵🇳🇴🇴🇲🇵🇰🇵🇼🇵🇸🇵🇦🇵🇬🇵🇾🇵🇪🇵🇭🇵🇳🇵🇱🇵🇹🇵🇷🇶🇦🇷🇪🇷🇴🇷🇺🇷🇼🇼🇸🇸🇲🇸🇦🇸🇳🇷🇸🇸🇨🇸🇱🇸🇬🇸🇽🇸🇰🇸🇮🇬🇸🇸🇧🇸🇴🇿🇦🇰🇷🇸🇸🇪🇸🇱🇰🇧🇱🇸🇭🇰🇳🇱🇨🇵🇲🇻🇨🇸🇩🇸🇷🇸🇿🇸🇪🇨🇭🇸🇾🇹🇼🇹🇯🇹🇿🇹🇭🇹🇱🇹🇬🇹🇰🇹🇴🇹🇹🇹🇳🇹🇷🇹🇲🇹🇨🇹🇻🇻🇮🇺🇬🇺🇦🇦🇪🇬🇧🇺🇸🇺🇾🇺🇿🇻🇺🇻🇦🇻🇪🇻🇳🇼🇫🇪🇭🇾🇪🇿🇲🇿🇼😃💁People•🐻🌻Animals•🍔🍹Food•🎷⚽️Activities•🚘🌇Travel•💡🎉Objects•💖🔣Symbols•🎌🏳️‍🌈Flags🤩🤨🤯🤪🤬🤮🤫🤭🧐🧒🧑🧓🧕🧔🤱🧙🧙‍♀️🧙‍♂️🧚🧚‍♀️🧚‍♂️🧛🧛‍♀️🧛‍♂️🧜🧜‍♀️🧜‍♂️🧝🧝‍♀️🧝‍♂️🧞🧞‍♀️🧞‍♂️🧟🧟‍♀️🧟‍♂️🧖🧖‍♀️🧖‍♂️🧗🧗‍♀️🧗‍♂️🧘🧘‍♀️🧘‍♂️🤟🤲🧠🧡🧣🧤🧥🧦🧢🦓🦒🦔🦕🦖🦗🥥🥦🥨🥩🥪🥣🥫🥟🥠🥡🥧🥤🥢🛸🛷🥌🏴󠁧󠁢󠁥󠁮󠁧󠁿🏴󠁧󠁢󠁳󠁣󠁴󠁿🏴󠁧󠁢󠁷󠁬󠁳󠁿😃💁People•🐻🌻Animals•🍔🍹Food•🎷⚽️Activities•🚘🌇Travel•💡🎉Objects•💖🔣Symbols•🎌🏳️‍🌈Flags☺️☹☝️✌️✍️❤️❣️☠♨️✈️⌛⌚♈♉♊♋♌♍♎♏♐♑♒♓☀️☁️☂️❄️⛄️☄♠️♥️♦️♣️▶️◀️☎️⌨✉️✏️✒️✂️↗️➡️↘️↙️↖️↕️↔️↩️↪️✡️☸☯️✝️☦☪☮☢☣☑️✔️✖️✳️✴️❇️‼️©️®️™️Ⓜ️▪️▫️#⃣️*️⃣0⃣️1⃣️2⃣️3⃣️4⃣️5⃣️6⃣️7⃣️8⃣️9⃣️⁉️ℹ️⤴️⤵️♻️◻️◼️◽◾☕⚠️☔⏏⬆️⬇️⬅️⚡☘⚓♿⚒⚙⚗⚖⚔⚰⚱⚜⚛⚪⚫🀄⭐⬛⬜⛑⛰⛪⛲⛺⛽⛵⛴⛔⛅⛈⛱⛄⚽⚾️⛳⛸⛷⛹⛏⛓⛩⭕❗🅿️❦♕♛♔♖♜☾→⇒⟹⇨⇰➩➪➫➬➭➮➯➲➳➵➸➻➺➼➽☜☟➹➷↶↷✆⌘⎋⏎⏏⎈⎌⍟❥ツღ☻`\r\n                    },\r\n                ],\r\n                emojiPalette: ``,\r\n            }\r\n        },\r\n        mounted() {\r\n            this.emojiPalette = this.paletteOptions[0].emojis;// Default\r\n            this.updateScaleFactor();\r\n            window.addEventListener('resize', () => this.updateScaleFactor());\r\n            // this.updatePalette();\r\n\r\n            this.renderView = new PIXI.Application({backgroundColor: 0x222222});\r\n            this.renderView.renderer.resize(0, 0);\r\n            document.querySelector('.render-output').appendChild(this.renderView.view);\r\n        },\r\n        methods: {\r\n            updatePalette() {\r\n                this.loading = true;\r\n                if (this.emojiMap === null || this.emojiMap.palette !== this.emojiPalette) {\r\n\r\n                    this.emojiMap = EmojiMapManager.emojiMap(this.emojiPalette);\r\n                    console.log(\"XHERE\");\r\n                    this.updateEmojiTextureMap();\r\n                }\r\n                this.loading = false;\r\n            },\r\n            updateEmojiTextureMap() {\r\n                console.log(\"Updating emoji texture map\");\r\n                const emojiSize = document.querySelector('#app').offsetWidth / this.emojiWidth;\r\n                let emojis = EmojiSplitter.spliddit(this.emojiPalette);\r\n                for (let emoji of emojis) {\r\n                    let text = new PIXI.Text(emoji, {fontSize: emojiSize, fill: '#ffffff'});\r\n                    text.updateText(); // force it to render to texture inside\r\n\r\n                    this.spriteCache[emoji] = text.texture;\r\n                }\r\n            },\r\n            loadImage() {\r\n                let now = performance.now();\r\n                this.loading = true;\r\n                console.log('loading true');\r\n\r\n                this.updatePalette();\r\n\r\n                let file = document.querySelector('input[type=file]').files[0];\r\n                let image = document.querySelector('.preview-image');\r\n                let canvas = document.createElement('canvas');\r\n                let context = canvas.getContext('2d');\r\n                image.src = URL.createObjectURL(file);\r\n                image.onload = () => {\r\n                    let {width, height} = image;\r\n                    let resizeFactor = this.emojiWidth / width;\r\n                    width = Math.round(width * resizeFactor);\r\n                    height = Math.round(height * resizeFactor);\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n                    canvas.style.width = '400px';\r\n                    canvas.style.height = 'auto';\r\n                    context.drawImage(image, 0, 0, width, height);\r\n\r\n                    this.grid = this.createEmojiGrid(width, height);\r\n                    let imageData = context.getImageData(0, 0, canvas.width, canvas.height).data;\r\n                    this.pictureToEmoji(this.grid, imageData);\r\n                    this.renderEmojiGrid(this.grid);\r\n\r\n                    this.loading = false;\r\n                    console.log('loading false');\r\n                    let time = performance.now() - now;\r\n                    console.log(`${time} ms`)\r\n                }\r\n            },\r\n\r\n            renderEmojiGrid(emojiGrid) {\r\n                if (this.useWebgl) {\r\n                    const appWidth = document.querySelector('#app').offsetWidth;\r\n                    const emojiSize = appWidth / this.emojiWidth;\r\n\r\n                    this.renderView.renderer.resize(appWidth, emojiGrid.height * emojiSize);\r\n                    // Clear stage\r\n                    while (this.renderView.stage.children[0]) {\r\n                        this.renderView.stage.removeChild(this.renderView.stage.children[0]);\r\n                    }\r\n\r\n\r\n                    for (let y = 0; y < emojiGrid.height; y++) {\r\n                        for (let x = 0; x < emojiGrid.width; x++) {\r\n                            let emoji = emojiGrid.grid[y][x];\r\n                            let sprite = new PIXI.Sprite(this.spriteCache[emoji]);\r\n                            sprite.x = x * emojiSize;\r\n                            sprite.y = y * emojiSize;\r\n\r\n                            this.renderView.stage.addChild(sprite);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.updateScaleFactor();\r\n                    let html = '';\r\n                    let outputElement = document.querySelector('.output');\r\n                    //Make fresh html grid\r\n                    for (let y = 0; y < emojiGrid.height; y++) {\r\n                        html += `<div class='row'>`;\r\n                        for (let x = 0; x < emojiGrid.width; x++) {\r\n                            html += `<div class='emoji'>${emojiGrid.grid[y][x]}</div>`;\r\n                        }\r\n                        html += '</div>';\r\n                    }\r\n                    outputElement.innerHTML = html;\r\n                }\r\n            },\r\n\r\n            createEmojiGrid(width, height) {\r\n                let grid = [];\r\n                for (let y = 0; y < height; y++)\r\n                    grid.push([]);\r\n                return {width, height, grid};\r\n            },\r\n\r\n            pictureToEmoji(emojiGrid, imageData) {\r\n                for (let i = 0; i < imageData.length; i += 4) {\r\n                    let n = i / 4;\r\n                    let y = Math.floor(n / emojiGrid.width);\r\n                    let x = n % emojiGrid.width;\r\n\r\n                    let [r, g, b] = imageData.slice(i, i + 3);\r\n                    let lab = LabConvert.rgbToLab(r, g, b);\r\n                    for (let j = 0; j < lab.length; j++) {\r\n                        lab[j] = Math.round(\r\n                            (this.emojiMap.colorToEmoji.colorRange + lab[j]) /\r\n                            this.emojiMap.colorToEmoji.step)\r\n                    }\r\n                    emojiGrid.grid[y][x] = this.emojiMap.colorToEmoji.map[lab[0]][lab[1]][lab[2]];\r\n                }\r\n            },\r\n            updateScaleFactor() {\r\n                if (this.useWebgl) {\r\n                    this.updateEmojiTextureMap();\r\n                    return;\r\n                }\r\n                let output = document.querySelector('.output');\r\n                let appWidth = document.querySelector('#app').offsetWidth;\r\n                let scaleFactor = appWidth / this.emojiWidth;\r\n                output.style.width = this.emojiWidth + 'px';\r\n\r\n                let newHeight;\r\n                if (this.grid !== null)\r\n                    newHeight = this.grid.height * scaleFactor;\r\n                else\r\n                    newHeight = 0;\r\n                output.style.height = newHeight + 'px';\r\n\r\n                output.style.transform = `scale(${scaleFactor})`;\r\n                console.log(\"Scaling output with factor\", scaleFactor);\r\n            }\r\n\r\n        },\r\n        watch: {\r\n            emojiWidth() {\r\n                this.timeouts.forEach(t => clearTimeout(t));\r\n                this.timeouts.push(setTimeout(() => {\r\n                    this.updateScaleFactor();\r\n                }, 500));\r\n                // console.log(\"Changing emoji size to\", newSize);\r\n                // document.documentElement.style.setProperty('--emoji-size', newSize + 'px');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    :root {\r\n        --emoji-size: 1px;\r\n    }\r\n\r\n    #app {\r\n        max-width: 800px;\r\n        margin: 0 auto;\r\n        display: block;\r\n    }\r\n\r\n    .render-output{\r\n        margin-top:30px;\r\n        margin-left: -20px;\r\n        width:calc(100% + 40px);\r\n    }\r\n\r\n    .output {\r\n        text-align: center;\r\n        margin-top: 0px;\r\n        margin-bottom: 0px;\r\n        margin-left: -20px;\r\n        line-height: var(--emoji-size);\r\n        white-space: nowrap;\r\n        font-variant-numeric: tabular-nums;\r\n        pointer-events: none;\r\n        transform-origin: top left;\r\n    }\r\n\r\n    .row {\r\n        margin: 0 !important;\r\n        padding: 0 !important;\r\n        height: var(--emoji-size);\r\n    }\r\n\r\n    .emoji {\r\n        background-color: rgba(0, 0, 0, 0.95);\r\n        margin: 0 !important;\r\n        padding: 0 !important;\r\n        display: inline-block;\r\n        margin-right: -4px;\r\n        width: var(--emoji-size);\r\n        height: var(--emoji-size);\r\n        font-size: var(--emoji-size);\r\n        text-align: center;\r\n    }\r\n\r\n    .md-content {\r\n        padding: 20px;\r\n    }\r\n\r\n    html, body {\r\n        margin: 0 !important;\r\n        padding: 0;\r\n    }\r\n</style>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0245836e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* eslint-disable no-console */\r\n\r\nimport { register } from 'register-service-worker'\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  register(`${process.env.BASE_URL}service-worker.js`, {\r\n    ready () {\r\n      console.log(\r\n        'App is being served from cache by a service worker.\\n' +\r\n        'For more details, visit https://goo.gl/AFskqB'\r\n      )\r\n    },\r\n    registered () {\r\n      console.log('Service worker has been registered.')\r\n    },\r\n    cached () {\r\n      console.log('Content has been cached for offline use.')\r\n    },\r\n    updatefound () {\r\n      console.log('New content is downloading.')\r\n    },\r\n    updated () {\r\n      console.log('New content is available; please refresh.')\r\n    },\r\n    offline () {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    },\r\n    error (error) {\r\n      console.error('Error during service worker registration:', error)\r\n    }\r\n  })\r\n}\r\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport './registerServiceWorker'\r\nimport VueMaterial from 'vue-material'\r\nimport 'vue-material/dist/vue-material.min.css'\r\nimport 'vue-material/dist/theme/default-dark.css'\r\n\r\nVue.use(VueMaterial);\r\nVue.config.productionTip = false;\r\n\r\nnew Vue({\r\n    render: h => h(App),\r\n}).$mount('#app');\r\n"],"sourceRoot":""}